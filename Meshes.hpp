/*
Author: Dan Rehberg
Date Modified: 8/5/2021

Purpose: This is just an extra application layer for generating the meshes
		to use in this program.
	Mesh data built and extracted from Blender via Python.
*/

#ifndef __SAMPLE_MESHES__
#define __SAMPLE_MESHES__

#include <vector>
#include "VectorMath.hpp"
#include "Shape.hpp"

Shape cube, suzanne, sphere;

void initShapes()
{
	vec3 verts[242];

	//Sphere
	verts[0] = vec3(0.0, 0.19509032368659973, 0.9807852506637573);
	verts[1] = vec3(0.0, 0.7071067690849304, 0.7071067690849304);
	verts[2] = vec3(0.0, 0.8314696550369263, 0.5555701851844788);
	verts[3] = vec3(0.0, 0.9238795042037964, 0.3826834261417389);
	verts[4] = vec3(0.0, 0.9807852506637573, 0.19509035348892212);
	verts[5] = vec3(0.0, 1.0, 7.549790126404332e-08);
	verts[6] = vec3(0.0, 0.9807853102684021, -0.19509020447731018);
	verts[7] = vec3(0.0, 0.9238795638084412, -0.38268327713012695);
	verts[8] = vec3(0.0, 0.8314696550369263, -0.5555701851844788);
	verts[9] = vec3(0.0, 0.7071067690849304, -0.7071067690849304);
	verts[10] = vec3(0.0, 0.5555701851844788, -0.8314696550369263);
	verts[11] = vec3(0.0, 0.38268327713012695, -0.9238796234130859);
	verts[12] = vec3(0.0, 0.19509008526802063, -0.9807853102684021);
	verts[13] = vec3(0.07465796917676926, 0.18023991584777832, 0.9807852506637573);
	verts[14] = vec3(0.14644674956798553, 0.3535533845424652, 0.9238795042037964);
	verts[15] = vec3(0.21260766685009003, 0.5132799744606018, 0.8314695954322815);
	verts[16] = vec3(0.2705981731414795, 0.6532814502716064, 0.7071067690849304);
	verts[17] = vec3(0.318189799785614, 0.7681777477264404, 0.5555701851844788);
	verts[18] = vec3(0.35355353355407715, 0.8535533547401428, 0.3826834261417389);
	verts[19] = vec3(0.3753304183483124, 0.906127393245697, 0.19509035348892212);
	verts[20] = vec3(0.38268357515335083, 0.9238795042037964, 7.549790126404332e-08);
	verts[21] = vec3(0.3753304183483124, 0.9061274528503418, -0.19509020447731018);
	verts[22] = vec3(0.35355353355407715, 0.8535534143447876, -0.38268327713012695);
	verts[23] = vec3(0.318189799785614, 0.7681777477264404, -0.5555701851844788);
	verts[24] = vec3(0.2705981731414795, 0.6532814502716064, -0.7071067690849304);
	verts[25] = vec3(0.21260763704776764, 0.513279914855957, -0.8314696550369263);
	verts[26] = vec3(0.14644667506217957, 0.3535532057285309, -0.9238796234130859);
	verts[27] = vec3(0.0746578723192215, 0.1802397072315216, -0.9807853102684021);
	verts[28] = vec3(0.13794991374015808, 0.13794957101345062, 0.9807852506637573);
	verts[29] = vec3(0.27059829235076904, 0.2705979347229004, 0.9238795042037964);
	verts[30] = vec3(0.3928477168083191, 0.3928473889827728, 0.8314695954322815);
	verts[31] = vec3(0.5000002384185791, 0.49999988079071045, 0.7071067690849304);
	verts[32] = vec3(0.5879380702972412, 0.5879377126693726, 0.5555701851844788);
	verts[33] = vec3(0.6532817482948303, 0.6532813906669617, 0.3826834261417389);
	verts[34] = vec3(0.693520188331604, 0.6935198307037354, 0.19509035348892212);
	verts[35] = vec3(0.7071070671081543, 0.7071067094802856, 7.549790126404332e-08);
	verts[36] = vec3(0.693520188331604, 0.6935198307037354, -0.19509020447731018);
	verts[37] = vec3(0.6532818078994751, 0.6532813906669617, -0.38268327713012695);
	verts[38] = vec3(0.5879380702972412, 0.5879377126693726, -0.5555701851844788);
	verts[39] = vec3(0.5000002384185791, 0.49999988079071045, -0.7071067690849304);
	verts[40] = vec3(0.3928476870059967, 0.39284732937812805, -0.8314696550369263);
	verts[41] = vec3(0.2705981731414795, 0.27059778571128845, -0.9238796234130859);
	verts[42] = vec3(0.13794974982738495, 0.1379494071006775, -0.9807853102684021);
	verts[43] = vec3(0.1802402287721634, 0.0746576115489006, 0.9807852506637573);
	verts[44] = vec3(0.3535536825656891, 0.1464463621377945, 0.9238795042037964);
	verts[45] = vec3(0.5132802724838257, 0.21260729432106018, 0.8314695954322815);
	verts[46] = vec3(0.6532817482948303, 0.27059778571128845, 0.7071067690849304);
	verts[47] = vec3(0.7681781053543091, 0.318189412355423, 0.5555701851844788);
	verts[48] = vec3(0.8535537123680115, 0.3535531461238861, 0.3826834261417389);
	verts[49] = vec3(0.9061277508735657, 0.37533003091812134, 0.19509035348892212);
	verts[50] = vec3(0.9238799214363098, 0.3826831877231598, 7.549790126404332e-08);
	verts[51] = vec3(0.9061277508735657, 0.37533003091812134, -0.19509020447731018);
	verts[52] = vec3(0.8535537719726562, 0.3535531163215637, -0.38268327713012695);
	verts[53] = vec3(0.7681781053543091, 0.318189412355423, -0.5555701851844788);
	verts[54] = vec3(0.6532817482948303, 0.27059778571128845, -0.7071067690849304);
	verts[55] = vec3(0.5132802128791809, 0.2126072496175766, -0.8314696550369263);
	verts[56] = vec3(0.35355353355407715, 0.14644627273082733, -0.9238796234130859);
	verts[57] = vec3(0.18024002015590668, 0.07465752214193344, -0.9807853102684021);
	verts[58] = vec3(0.19509060680866241, -3.4517816516199673e-07, 0.9807852506637573);
	verts[59] = vec3(0.38268372416496277, -3.8243106814661587e-07, 0.9238795042037964);
	verts[60] = vec3(0.5555705428123474, -3.8243106814661587e-07, 0.8314695954322815);
	verts[61] = vec3(0.7071070075035095, -3.9733222934046353e-07, 0.7071067690849304);
	verts[62] = vec3(0.8314698934555054, -4.122333905343112e-07, 0.5555701851844788);
	verts[63] = vec3(0.923879861831665, -3.8243106814661587e-07, 0.3826834261417389);
	verts[64] = vec3(0.9807855486869812, -3.8243106814661587e-07, 0.19509035348892212);
	verts[65] = vec3(1.0000003576278687, -4.420357129220065e-07, 7.549790126404332e-08);
	verts[66] = vec3(0.9807855486869812, -3.8243106814661587e-07, -0.19509020447731018);
	verts[67] = vec3(0.923879861831665, -4.420357129220065e-07, -0.38268327713012695);
	verts[68] = vec3(0.8314698934555054, -4.122333905343112e-07, -0.5555701851844788);
	verts[69] = vec3(0.7071070075035095, -3.9733222934046353e-07, -0.7071067690849304);
	verts[70] = vec3(0.5555704832077026, -3.8243106814661587e-07, -0.8314696550369263);
	verts[71] = vec3(0.38268357515335083, -3.9733222934046353e-07, -0.9238796234130859);
	verts[72] = vec3(0.1950903832912445, -3.4517816516199673e-07, -0.9807853102684021);
	verts[73] = vec3(0.180240198969841, -0.07465828955173492, 0.9807852506637573);
	verts[74] = vec3(0.3535536229610443, -0.14644712209701538, 0.9238795042037964);
	verts[75] = vec3(0.5132802128791809, -0.21260803937911987, 0.8314695954322815);
	verts[76] = vec3(0.6532816290855408, -0.27059853076934814, 0.7071067690849304);
	verts[77] = vec3(0.7681779265403748, -0.31819018721580505, 0.5555701851844788);
	verts[78] = vec3(0.8535536527633667, -0.3535539209842682, 0.3826834261417389);
	verts[79] = vec3(0.9061276912689209, -0.37533077597618103, 0.19509035348892212);
	verts[80] = vec3(0.9238798022270203, -0.38268405199050903, 7.549790126404332e-08);
	verts[81] = vec3(0.9061276912689209, -0.37533077597618103, -0.19509020447731018);
	verts[82] = vec3(0.8535535931587219, -0.35355398058891296, -0.38268327713012695);
	verts[83] = vec3(0.7681779265403748, -0.31819018721580505, -0.5555701851844788);
	verts[84] = vec3(0.6532816290855408, -0.27059853076934814, -0.7071067690849304);
	verts[85] = vec3(0.5132801532745361, -0.21260802447795868, -0.8314696550369263);
	verts[86] = vec3(0.3535534739494324, -0.1464470773935318, -0.9238796234130859);
	verts[87] = vec3(0.1802399903535843, -0.07465820759534836, -0.9807853102684021);
	verts[88] = vec3(0.1379498541355133, -0.13795024156570435, 0.9807852506637573);
	verts[89] = vec3(0.2705981731414795, -0.2705986201763153, 0.9238795042037964);
	verts[90] = vec3(0.39284759759902954, -0.39284810423851013, 0.8314695954322815);
	verts[91] = vec3(0.5000000596046448, -0.5000004768371582, 0.7071067690849304);
	verts[92] = vec3(0.5879378318786621, -0.5879383683204651, 0.5555701851844788);
	verts[93] = vec3(0.653281569480896, -0.653282105922699, 0.3826834261417389);
	verts[94] = vec3(0.6935200095176697, -0.6935204863548279, 0.19509035348892212);
	verts[95] = vec3(0.7071068286895752, -0.707107424736023, 7.549790126404332e-08);
	verts[96] = vec3(0.6935200095176697, -0.6935204863548279, -0.19509020447731018);
	verts[97] = vec3(0.6532815098762512, -0.653282105922699, -0.38268327713012695);
	verts[98] = vec3(0.5879378318786621, -0.5879383683204651, -0.5555701851844788);
	verts[99] = vec3(0.5000000596046448, -0.5000004768371582, -0.7071067690849304);
	verts[100] = vec3(0.39284753799438477, -0.39284804463386536, -0.8314696550369263);
	verts[101] = vec3(0.27059805393218994, -0.27059856057167053, -0.9238796234130859);
	verts[102] = vec3(0.13794969022274017, -0.1379500776529312, -0.9807853102684021);
	verts[103] = vec3(0.07465788722038269, -0.18024057149887085, 0.9807852506637573);
	verts[104] = vec3(0.1464466154575348, -0.35355398058891296, 0.9238795042037964);
	verts[105] = vec3(0.2126075029373169, -0.5132805705070496, 0.8314695954322815);
	verts[106] = vec3(0.27059802412986755, -0.6532819271087646, 0.7071067690849304);
	verts[107] = vec3(0.31818950176239014, -0.7681782841682434, 0.5555701851844788);
	verts[108] = vec3(0.35355332493782043, -0.8535540103912354, 0.3826834261417389);
	verts[109] = vec3(0.37533023953437805, -0.9061279892921448, 0.19509035348892212);
	verts[110] = vec3(0.38268330693244934, -0.9238801002502441, 7.549790126404332e-08);
	verts[111] = vec3(0.37533023953437805, -0.9061279892921448, -0.19509020447731018);
	verts[112] = vec3(0.35355326533317566, -0.8535540103912354, -0.38268327713012695);
	verts[113] = vec3(0.31818950176239014, -0.7681782841682434, -0.5555701851844788);
	verts[114] = vec3(0.27059802412986755, -0.6532819271087646, -0.7071067690849304);
	verts[115] = vec3(0.2126074731349945, -0.5132805109024048, -0.8314696550369263);
	verts[116] = vec3(0.14644652605056763, -0.3535539209842682, -0.9238796234130859);
	verts[117] = vec3(0.07465780526399612, -0.18024033308029175, -0.9807853102684021);
	verts[118] = vec3(-6.902099869421363e-08, -0.19509093463420868, 0.9807852506637573);
	verts[119] = vec3(-1.137244822757566e-07, -0.38268399238586426, 0.9238795042037964);
	verts[120] = vec3(-1.435268046634519e-07, -0.5555707812309265, 0.8314695954322815);
	verts[121] = vec3(-8.392215988806129e-08, -0.7071071863174438, 0.7071067690849304);
	verts[122] = vec3(-2.3293377182653785e-07, -0.8314700126647949, 0.5555701851844788);
	verts[123] = vec3(-2.0313144943884254e-07, -0.9238801002502441, 0.3826834261417389);
	verts[124] = vec3(-1.435268046634519e-07, -0.9807857275009155, 0.19509035348892212);
	verts[125] = vec3(-2.3293377182653785e-07, -1.0000004768371582, 7.549790126404332e-08);
	verts[126] = vec3(-1.435268046634519e-07, -0.9807857275009155, -0.19509020447731018);
	verts[127] = vec3(-2.6273608000337845e-07, -0.9238800406455994, -0.38268327713012695);
	verts[128] = vec3(-2.3293377182653785e-07, -0.8314700126647949, -0.5555701851844788);
	verts[129] = vec3(-8.392215988806129e-08, -0.7071071863174438, -0.7071067690849304);
	verts[130] = vec3(-1.5842796585729957e-07, -0.5555707216262817, -0.8314696550369263);
	verts[131] = vec3(-1.7332912705114722e-07, -0.3826839327812195, -0.9238796234130859);
	verts[132] = vec3(-5.4119837500365975e-08, -0.19509068131446838, -0.9807853102684021);
	verts[133] = vec3(0.0, -3.2584136988589307e-07, -1.0);
	verts[134] = vec3(-0.07465801388025284, -0.18024051189422607, 0.9807852506637573);
	verts[135] = vec3(-0.1464468240737915, -0.3535538911819458, 0.9238795042037964);
	verts[136] = vec3(-0.2126077562570572, -0.5132803916931152, 0.8314695954322815);
	verts[137] = vec3(-0.2705982029438019, -0.6532817482948303, 0.7071067690849304);
	verts[138] = vec3(-0.31818991899490356, -0.7681780457496643, 0.5555701851844788);
	verts[139] = vec3(-0.3535536825656891, -0.853553831577301, 0.3826834261417389);
	verts[140] = vec3(-0.37533047795295715, -0.9061277508735657, 0.19509035348892212);
	verts[141] = vec3(-0.38268372416496277, -0.923879861831665, 7.549790126404332e-08);
	verts[142] = vec3(-0.37533047795295715, -0.9061277508735657, -0.19509020447731018);
	verts[143] = vec3(-0.3535537123680115, -0.8535537123680115, -0.38268327713012695);
	verts[144] = vec3(-0.31818991899490356, -0.7681780457496643, -0.5555701851844788);
	verts[145] = vec3(-0.2705982029438019, -0.6532817482948303, -0.7071067690849304);
	verts[146] = vec3(-0.2126077562570572, -0.5132803320884705, -0.8314696550369263);
	verts[147] = vec3(-0.1464468538761139, -0.35355380177497864, -0.9238796234130859);
	verts[148] = vec3(-0.07465790212154388, -0.18024030327796936, -0.9807853102684021);
	verts[149] = vec3(-0.13794994354248047, -0.13795016705989838, 0.9807852506637573);
	verts[150] = vec3(-0.27059832215309143, -0.270598441362381, 0.9238795042037964);
	verts[151] = vec3(-0.3928477466106415, -0.39284777641296387, 0.8314695954322815);
	verts[152] = vec3(-0.5000001192092896, -0.5000001192092896, 0.7071067690849304);
	verts[153] = vec3(-0.5879380702972412, -0.5879378914833069, 0.5555701851844788);
	verts[154] = vec3(-0.6532818078994751, -0.6532817482948303, 0.3826834261417389);
	verts[155] = vec3(-0.6935200691223145, -0.6935200691223145, 0.19509035348892212);
	verts[156] = vec3(-0.7071070671081543, -0.7071069478988647, 7.549790126404332e-08);
	verts[157] = vec3(-0.6935200691223145, -0.6935200691223145, -0.19509020447731018);
	verts[158] = vec3(-0.6532818078994751, -0.6532816290855408, -0.38268327713012695);
	verts[159] = vec3(-0.5879380702972412, -0.5879378914833069, -0.5555701851844788);
	verts[160] = vec3(-0.5000001192092896, -0.5000001192092896, -0.7071067690849304);
	verts[161] = vec3(-0.3928477168083191, -0.3928477466106415, -0.8314696550369263);
	verts[162] = vec3(-0.27059832215309143, -0.2705983519554138, -0.9238796234130859);
	verts[163] = vec3(-0.13794976472854614, -0.13795001804828644, -0.9807853102684021);
	verts[164] = vec3(-3.0103808512649266e-07, -4.505353956574254e-07, 1.0);
	verts[165] = vec3(-0.18024024367332458, -0.07465819269418716, 0.9807852506637573);
	verts[166] = vec3(-0.3535536527633667, -0.14644688367843628, 0.9238795042037964);
	verts[167] = vec3(-0.5132802128791809, -0.21260769665241241, 0.8314695954322815);
	verts[168] = vec3(-0.6532815098762512, -0.2705981433391571, 0.7071067690849304);
	verts[169] = vec3(-0.7681779265403748, -0.3181895911693573, 0.5555701851844788);
	verts[170] = vec3(-0.8535536527633667, -0.3535534739494324, 0.3826834261417389);
	verts[171] = vec3(-0.9061274528503418, -0.3753303289413452, 0.19509035348892212);
	verts[172] = vec3(-0.9238797426223755, -0.38268348574638367, 7.549790126404332e-08);
	verts[173] = vec3(-0.9061274528503418, -0.3753303289413452, -0.19509020447731018);
	verts[174] = vec3(-0.8535535931587219, -0.3535534143447876, -0.38268327713012695);
	verts[175] = vec3(-0.7681779265403748, -0.3181895911693573, -0.5555701851844788);
	verts[176] = vec3(-0.6532815098762512, -0.2705981433391571, -0.7071067690849304);
	verts[177] = vec3(-0.5132801532745361, -0.21260768175125122, -0.8314696550369263);
	verts[178] = vec3(-0.3535536229610443, -0.14644679427146912, -0.9238796234130859);
	verts[179] = vec3(-0.18024003505706787, -0.07465813308954239, -0.9807853102684021);
	verts[180] = vec3(-0.19509060680866241, -2.4087003680506314e-07, 0.9807852506637573);
	verts[181] = vec3(-0.3826836347579956, -1.7381481143274868e-07, 0.9238795042037964);
	verts[182] = vec3(-0.5555704236030579, -6.950668307581509e-08, 0.8314695954322815);
	verts[183] = vec3(-0.7071067094802856, -8.440784426966275e-08, 0.7071067690849304);
	verts[184] = vec3(-0.8314696550369263, 9.440609005650913e-08, 0.5555701851844788);
	verts[185] = vec3(-0.9238796830177307, 3.4801445281118504e-08, 0.3826834261417389);
	verts[186] = vec3(-0.9807851910591125, -5.4605521881967434e-08, 0.19509035348892212);
	verts[187] = vec3(-1.0000001192092896, 6.460376766881382e-08, 7.549790126404332e-08);
	verts[188] = vec3(-0.9807851910591125, -5.4605521881967434e-08, -0.19509020447731018);
	verts[189] = vec3(-0.9238795638084412, 6.460376766881382e-08, -0.38268327713012695);
	verts[190] = vec3(-0.8314696550369263, 9.440609005650913e-08, -0.5555701851844788);
	verts[191] = vec3(-0.7071067094802856, -8.440784426966275e-08, -0.7071067690849304);
	verts[192] = vec3(-0.5555703639984131, -6.950668307581509e-08, -0.8314696550369263);
	verts[193] = vec3(-0.38268357515335083, -9.93090054635104e-08, -0.9238796234130859);
	verts[194] = vec3(-0.1950903832912445, -2.632217785958346e-07, -0.9807853102684021);
	verts[195] = vec3(-0.1802401840686798, 0.07465770095586777, 0.9807852506637573);
	verts[196] = vec3(-0.35355350375175476, 0.14644649624824524, 0.9238795042037964);
	verts[197] = vec3(-0.5132800340652466, 0.2126075178384781, 0.8314695954322815);
	verts[198] = vec3(-0.6532813310623169, 0.2705979347229004, 0.7071067690849304);
	verts[199] = vec3(-0.7681775689125061, 0.31818974018096924, 0.5555701851844788);
	verts[200] = vec3(-0.8535533547401428, 0.3535534739494324, 0.3826834261417389);
	verts[201] = vec3(-0.9061272144317627, 0.3753301799297333, 0.19509035348892212);
	verts[202] = vec3(-0.9238795042037964, 0.38268354535102844, 7.549790126404332e-08);
	verts[203] = vec3(-0.9061272144317627, 0.3753301799297333, -0.19509020447731018);
	verts[204] = vec3(-0.853553295135498, 0.35355344414711, -0.38268327713012695);
	verts[205] = vec3(-0.7681775689125061, 0.31818974018096924, -0.5555701851844788);
	verts[206] = vec3(-0.6532813310623169, 0.2705979347229004, -0.7071067690849304);
	verts[207] = vec3(-0.5132799744606018, 0.2126075029373169, -0.8314696550369263);
	verts[208] = vec3(-0.3535534143447876, 0.14644655585289001, -0.9238796234130859);
	verts[209] = vec3(-0.1802399903535843, 0.07465759664773941, -0.9807853102684021);
	verts[210] = vec3(-0.13794982433319092, 0.1379496157169342, 0.9807852506637573);
	verts[211] = vec3(-0.27059808373451233, 0.2705979645252228, 0.9238795042037964);
	verts[212] = vec3(-0.3928473889827728, 0.39284747838974, 0.8314695954322815);
	verts[213] = vec3(-0.4999997615814209, 0.4999997913837433, 0.7071067690849304);
	verts[214] = vec3(-0.5879374146461487, 0.5879378318786621, 0.5555701851844788);
	verts[215] = vec3(-0.6532812714576721, 0.653281569480896, 0.3826834261417389);
	verts[216] = vec3(-0.6935195922851562, 0.6935197114944458, 0.19509035348892212);
	verts[217] = vec3(-0.7071065902709961, 0.70710688829422, 7.549790126404332e-08);
	verts[218] = vec3(-0.6935195922851562, 0.6935197114944458, -0.19509020447731018);
	verts[219] = vec3(-0.6532812118530273, 0.6532815098762512, -0.38268327713012695);
	verts[220] = vec3(-0.5879374146461487, 0.5879378318786621, -0.5555701851844788);
	verts[221] = vec3(-0.4999997615814209, 0.4999997913837433, -0.7071067690849304);
	verts[222] = vec3(-0.39284735918045044, 0.3928474485874176, -0.8314696550369263);
	verts[223] = vec3(-0.2705979645252228, 0.2705979645252228, -0.9238796234130859);
	verts[224] = vec3(-0.13794967532157898, 0.13794945180416107, -0.9807853102684021);
	verts[225] = vec3(-0.0746578574180603, 0.18023991584777832, 0.9807852506637573);
	verts[226] = vec3(-0.14644655585289001, 0.35355329513549805, 0.9238795042037964);
	verts[227] = vec3(-0.21260729432106018, 0.513279914855957, 0.8314695954322815);
	verts[228] = vec3(-0.27059775590896606, 0.6532812118530273, 0.7071067690849304);
	verts[229] = vec3(-0.3181891441345215, 0.7681776285171509, 0.5555701851844788);
	verts[230] = vec3(-0.35355299711227417, 0.8535534143447876, 0.3826834261417389);
	verts[231] = vec3(-0.3753298819065094, 0.9061270952224731, 0.19509035348892212);
	verts[232] = vec3(-0.38268303871154785, 0.9238795638084412, 7.549790126404332e-08);
	verts[233] = vec3(-0.3753298819065094, 0.9061270952224731, -0.19509020447731018);
	verts[234] = vec3(-0.3535529673099518, 0.853553295135498, -0.38268327713012695);
	verts[235] = vec3(-0.3181891441345215, 0.7681776285171509, -0.5555701851844788);
	verts[236] = vec3(-0.27059775590896606, 0.6532812118530273, -0.7071067690849304);
	verts[237] = vec3(-0.212607279419899, 0.513279914855957, -0.8314696550369263);
	verts[238] = vec3(-0.14644643664360046, 0.35355323553085327, -0.9238796234130859);
	verts[239] = vec3(-0.07465777546167374, 0.1802397072315216, -0.9807853102684021);
	verts[240] = vec3(1.544964192135012e-07, 0.38268327713012695, 0.9238795042037964);
	verts[241] = vec3(3.333103677505278e-07, 0.555570125579834, 0.8314695954322815);
	sphere = Shape(verts, 242);

	//Suzanne
	verts[0] = vec3(0.3515625, -0.828125, 0.2421875);
	verts[1] = vec3(-0.3515625, -0.828125, 0.2421875);
	verts[2] = vec3(0.4453125, -0.78125, 0.15625);
	verts[3] = vec3(-0.4453125, -0.78125, 0.15625);
	verts[4] = vec3(0.0, 0.546875, 0.8984375);
	verts[5] = vec3(0.0, 0.8515625, 0.5625);
	verts[6] = vec3(0.0, 0.828125, 0.0703125);
	verts[7] = vec3(0.3671875, -0.53125, -0.890625);
	verts[8] = vec3(-0.3671875, -0.53125, -0.890625);
	verts[9] = vec3(0.328125, -0.5234375, -0.9453125);
	verts[10] = vec3(-0.328125, -0.5234375, -0.9453125);
	verts[11] = vec3(0.1796875, -0.5546875, -0.96875);
	verts[12] = vec3(-0.1796875, -0.5546875, -0.96875);
	verts[13] = vec3(0.0, -0.578125, -0.984375);
	verts[14] = vec3(0.859375, -0.59375, 0.4296875);
	verts[15] = vec3(-0.859375, -0.59375, 0.4296875);
	verts[16] = vec3(0.3203125, -0.734375, 0.7578125);
	verts[17] = vec3(-0.3203125, -0.734375, 0.7578125);
	verts[18] = vec3(0.0, -0.734375, -0.765625);
	verts[19] = vec3(0.109375, -0.734375, -0.71875);
	verts[20] = vec3(-0.109375, -0.734375, -0.71875);
	verts[21] = vec3(0.1171875, -0.7109375, -0.8359375);
	verts[22] = vec3(-0.1171875, -0.7109375, -0.8359375);
	verts[23] = vec3(0.0625, -0.6953125, -0.8828125);
	verts[24] = vec3(-0.0625, -0.6953125, -0.8828125);
	verts[25] = vec3(0.6875, -0.7265625, 0.4140625);
	verts[26] = vec3(-0.6875, -0.7265625, 0.4140625);
	verts[27] = vec3(0.3125, -0.8359375, 0.640625);
	verts[28] = vec3(-0.3125, -0.8359375, 0.640625);
	verts[29] = vec3(0.203125, -0.8515625, 0.6171875);
	verts[30] = vec3(-0.203125, -0.8515625, 0.6171875);
	verts[31] = vec3(0.265625, -0.6640625, -0.8203125);
	verts[32] = vec3(-0.265625, -0.6640625, -0.8203125);
	verts[33] = vec3(0.234375, -0.6328125, -0.9140625);
	verts[34] = vec3(-0.234375, -0.6328125, -0.9140625);
	verts[35] = vec3(0.1640625, -0.6328125, -0.9296875);
	verts[36] = vec3(-0.1640625, -0.6328125, -0.9296875);
	verts[37] = vec3(0.0, -0.640625, -0.9453125);
	verts[38] = vec3(0.109375, -0.828125, -0.2265625);
	verts[39] = vec3(-0.109375, -0.828125, -0.2265625);
	verts[40] = vec3(0.0, -0.2890625, 0.8984375);
	verts[41] = vec3(0.0, 0.078125, 0.984375);
	verts[42] = vec3(0.0, 0.671875, -0.1953125);
	verts[43] = vec3(0.0, -0.4609375, -0.9765625);
	verts[44] = vec3(0.328125, -0.3984375, -0.9140625);
	verts[45] = vec3(-0.328125, -0.3984375, -0.9140625);
	verts[46] = vec3(0.453125, 0.3828125, 0.8671875);
	verts[47] = vec3(-0.453125, 0.3828125, 0.8671875);
	verts[48] = vec3(0.453125, 0.0703125, 0.9296875);
	verts[49] = vec3(-0.453125, 0.0703125, 0.9296875);
	verts[50] = vec3(0.453125, -0.234375, 0.8515625);
	verts[51] = vec3(-0.453125, -0.234375, 0.8515625);
	verts[52] = vec3(1.28125, 0.4296875, 0.0546875);
	verts[53] = vec3(-1.28125, 0.4296875, 0.0546875);
	verts[54] = vec3(1.3515625, 0.421875, 0.3203125);
	verts[55] = vec3(-1.3515625, 0.421875, 0.3203125);
	verts[56] = vec3(1.234375, 0.421875, 0.5078125);
	verts[57] = vec3(-1.234375, 0.421875, 0.5078125);
	verts[58] = vec3(1.25, 0.546875, 0.46875);
	verts[59] = vec3(-1.25, 0.546875, 0.46875);
	verts[60] = vec3(1.3671875, 0.5, 0.296875);
	verts[61] = vec3(-1.3671875, 0.5, 0.296875);
	verts[62] = vec3(1.3125, 0.53125, 0.0546875);
	verts[63] = vec3(-1.3125, 0.53125, 0.0546875);
	verts[64] = vec3(1.0390625, 0.4921875, -0.0859375);
	verts[65] = vec3(-1.0390625, 0.4921875, -0.0859375);
	suzanne = Shape(verts, 66);

	//Cube
	verts[0] = (vec3(-1.0f, -1.0f, -1.0f));//0
	verts[1] = (vec3(1.0f, -1.0f, -1.0f));//1
	verts[2] = (vec3(1.0f, -1.0f, 1.0f));//2
	verts[3] = (vec3(-1.0f, -1.0f, 1.0f));//3
	verts[4] = (vec3(-1.0f, 1.0f, -1.0f));//4
	verts[5] = (vec3(1.0f, 1.0f, -1.0f));//5
	verts[6] = (vec3(1.0f, 1.0f, 1.0f));//6
	verts[7] = (vec3(-1.0f, 1.0f, 1.0f));//7
	cube = Shape(verts, 8);

	//Push the static Sphere edge data to each Shape
	int edge[242];
	edge[0] = 4;
	edge[1] = 4;
	edge[2] = 4;
	edge[3] = 4;
	edge[4] = 4;
	edge[5] = 4;
	edge[6] = 4;
	edge[7] = 4;
	edge[8] = 4;
	edge[9] = 4;
	edge[10] = 4;
	edge[11] = 4;
	edge[12] = 4;
	edge[13] = 4;
	edge[14] = 4;
	edge[15] = 4;
	edge[16] = 4;
	edge[17] = 4;
	edge[18] = 4;
	edge[19] = 4;
	edge[20] = 4;
	edge[21] = 4;
	edge[22] = 4;
	edge[23] = 4;
	edge[24] = 4;
	edge[25] = 4;
	edge[26] = 4;
	edge[27] = 4;
	edge[28] = 4;
	edge[29] = 4;
	edge[30] = 4;
	edge[31] = 4;
	edge[32] = 4;
	edge[33] = 4;
	edge[34] = 4;
	edge[35] = 4;
	edge[36] = 4;
	edge[37] = 4;
	edge[38] = 4;
	edge[39] = 4;
	edge[40] = 4;
	edge[41] = 4;
	edge[42] = 4;
	edge[43] = 4;
	edge[44] = 4;
	edge[45] = 4;
	edge[46] = 4;
	edge[47] = 4;
	edge[48] = 4;
	edge[49] = 4;
	edge[50] = 4;
	edge[51] = 4;
	edge[52] = 4;
	edge[53] = 4;
	edge[54] = 4;
	edge[55] = 4;
	edge[56] = 4;
	edge[57] = 4;
	edge[58] = 4;
	edge[59] = 4;
	edge[60] = 4;
	edge[61] = 4;
	edge[62] = 4;
	edge[63] = 4;
	edge[64] = 4;
	edge[65] = 4;
	edge[66] = 4;
	edge[67] = 4;
	edge[68] = 4;
	edge[69] = 4;
	edge[70] = 4;
	edge[71] = 4;
	edge[72] = 4;
	edge[73] = 4;
	edge[74] = 4;
	edge[75] = 4;
	edge[76] = 4;
	edge[77] = 4;
	edge[78] = 4;
	edge[79] = 4;
	edge[80] = 4;
	edge[81] = 4;
	edge[82] = 4;
	edge[83] = 4;
	edge[84] = 4;
	edge[85] = 4;
	edge[86] = 4;
	edge[87] = 4;
	edge[88] = 4;
	edge[89] = 4;
	edge[90] = 4;
	edge[91] = 4;
	edge[92] = 4;
	edge[93] = 4;
	edge[94] = 4;
	edge[95] = 4;
	edge[96] = 4;
	edge[97] = 4;
	edge[98] = 4;
	edge[99] = 4;
	edge[100] = 4;
	edge[101] = 4;
	edge[102] = 4;
	edge[103] = 4;
	edge[104] = 4;
	edge[105] = 4;
	edge[106] = 4;
	edge[107] = 4;
	edge[108] = 4;
	edge[109] = 4;
	edge[110] = 4;
	edge[111] = 4;
	edge[112] = 4;
	edge[113] = 4;
	edge[114] = 4;
	edge[115] = 4;
	edge[116] = 4;
	edge[117] = 4;
	edge[118] = 4;
	edge[119] = 4;
	edge[120] = 4;
	edge[121] = 4;
	edge[122] = 4;
	edge[123] = 4;
	edge[124] = 4;
	edge[125] = 4;
	edge[126] = 4;
	edge[127] = 4;
	edge[128] = 4;
	edge[129] = 4;
	edge[130] = 4;
	edge[131] = 4;
	edge[132] = 4;
	edge[133] = 16;
	edge[134] = 4;
	edge[135] = 4;
	edge[136] = 4;
	edge[137] = 4;
	edge[138] = 4;
	edge[139] = 4;
	edge[140] = 4;
	edge[141] = 4;
	edge[142] = 4;
	edge[143] = 4;
	edge[144] = 4;
	edge[145] = 4;
	edge[146] = 4;
	edge[147] = 4;
	edge[148] = 4;
	edge[149] = 4;
	edge[150] = 4;
	edge[151] = 4;
	edge[152] = 4;
	edge[153] = 4;
	edge[154] = 4;
	edge[155] = 4;
	edge[156] = 4;
	edge[157] = 4;
	edge[158] = 4;
	edge[159] = 4;
	edge[160] = 4;
	edge[161] = 4;
	edge[162] = 4;
	edge[163] = 4;
	edge[164] = 16;
	edge[165] = 4;
	edge[166] = 4;
	edge[167] = 4;
	edge[168] = 4;
	edge[169] = 4;
	edge[170] = 4;
	edge[171] = 4;
	edge[172] = 4;
	edge[173] = 4;
	edge[174] = 4;
	edge[175] = 4;
	edge[176] = 4;
	edge[177] = 4;
	edge[178] = 4;
	edge[179] = 4;
	edge[180] = 4;
	edge[181] = 4;
	edge[182] = 4;
	edge[183] = 4;
	edge[184] = 4;
	edge[185] = 4;
	edge[186] = 4;
	edge[187] = 4;
	edge[188] = 4;
	edge[189] = 4;
	edge[190] = 4;
	edge[191] = 4;
	edge[192] = 4;
	edge[193] = 4;
	edge[194] = 4;
	edge[195] = 4;
	edge[196] = 4;
	edge[197] = 4;
	edge[198] = 4;
	edge[199] = 4;
	edge[200] = 4;
	edge[201] = 4;
	edge[202] = 4;
	edge[203] = 4;
	edge[204] = 4;
	edge[205] = 4;
	edge[206] = 4;
	edge[207] = 4;
	edge[208] = 4;
	edge[209] = 4;
	edge[210] = 4;
	edge[211] = 4;
	edge[212] = 4;
	edge[213] = 4;
	edge[214] = 4;
	edge[215] = 4;
	edge[216] = 4;
	edge[217] = 4;
	edge[218] = 4;
	edge[219] = 4;
	edge[220] = 4;
	edge[221] = 4;
	edge[222] = 4;
	edge[223] = 4;
	edge[224] = 4;
	edge[225] = 4;
	edge[226] = 4;
	edge[227] = 4;
	edge[228] = 4;
	edge[229] = 4;
	edge[230] = 4;
	edge[231] = 4;
	edge[232] = 4;
	edge[233] = 4;
	edge[234] = 4;
	edge[235] = 4;
	edge[236] = 4;
	edge[237] = 4;
	edge[238] = 4;
	edge[239] = 4;
	edge[240] = 4;
	edge[241] = 4;
	for (unsigned int i = 0; i < 242; ++i)//Set the edge counts first so that edge paths can be correctly iterated over
	{
		sphere.edgeCount[i] = edge[i];
	}
	edge[0] = 5;
	edge[1] = 4;
	edge[2] = 5;
	edge[3] = 4;
	edge[4] = 4;
	edge[5] = 5;
	edge[6] = 4;
	edge[7] = 5;
	for (unsigned int i = 0; i < 8; ++i)//Set the edge counts first so that edge paths can be correctly iterated over
	{
		cube.edgeCount[i] = edge[i];
	}
	//End Sphere Edge
	//Suzanne Edge (Count)
	edge[0] = 5;
	edge[1] = 5;
	edge[2] = 4;
	edge[3] = 4;
	edge[4] = 6;
	edge[5] = 4;
	edge[6] = 4;
	edge[7] = 5;
	edge[8] = 5;
	edge[9] = 6;
	edge[10] = 6;
	edge[11] = 4;
	edge[12] = 4;
	edge[13] = 4;
	edge[14] = 8;
	edge[15] = 8;
	edge[16] = 7;
	edge[17] = 7;
	edge[18] = 5;
	edge[19] = 3;
	edge[20] = 3;
	edge[21] = 8;
	edge[22] = 7;
	edge[23] = 4;
	edge[24] = 5;
	edge[25] = 5;
	edge[26] = 5;
	edge[27] = 7;
	edge[28] = 6;
	edge[29] = 4;
	edge[30] = 5;
	edge[31] = 6;
	edge[32] = 6;
	edge[33] = 4;
	edge[34] = 4;
	edge[35] = 4;
	edge[36] = 4;
	edge[37] = 5;
	edge[38] = 7;
	edge[39] = 8;
	edge[40] = 3;
	edge[41] = 6;
	edge[42] = 8;
	edge[43] = 8;
	edge[44] = 5;
	edge[45] = 5;
	edge[46] = 3;
	edge[47] = 3;
	edge[48] = 5;
	edge[49] = 5;
	edge[50] = 4;
	edge[51] = 4;
	edge[52] = 4;
	edge[53] = 4;
	edge[54] = 4;
	edge[55] = 4;
	edge[56] = 5;
	edge[57] = 5;
	edge[58] = 6;
	edge[59] = 6;
	edge[60] = 3;
	edge[61] = 3;
	edge[62] = 9;
	edge[63] = 9;
	edge[64] = 3;
	edge[65] = 3;
	//Suzanne End Edge (Count)
	for (unsigned int i = 0; i < 66; ++i)//Set the edge counts first so that edge paths can be correctly iterated over
	{
		suzanne.edgeCount[i] = edge[i];
	}

	int edgeV[242][16];
	edgeV[0][0] = 5;//[0] has five edges
	edgeV[0][1] = 4;
	edgeV[0][2] = 3;
	edgeV[0][3] = 2;
	edgeV[0][4] = 1;
	edgeV[1][0] = 0;//[1] has four edges
	edgeV[1][1] = 2;
	edgeV[1][2] = 6;
	edgeV[1][3] = 5;
	edgeV[2][0] = 1;//[2] has five edges
	edgeV[2][1] = 0;
	edgeV[2][2] = 3;
	edgeV[2][3] = 7;
	edgeV[4][4] = 6;
	edgeV[3][0] = 0;//[3] has four edges
	edgeV[3][1] = 4;
	edgeV[3][2] = 7;
	edgeV[3][3] = 2;
	edgeV[4][0] = 0;//[4] has four edges
	edgeV[4][1] = 5;
	edgeV[4][2] = 7;
	edgeV[4][3] = 3;
	edgeV[5][0] = 4;//[5] has five edges
	edgeV[5][1] = 0;
	edgeV[5][2] = 1;
	edgeV[5][3] = 6;
	edgeV[5][4] = 7;
	edgeV[6][0] = 5;//[6] has four edges
	edgeV[6][1] = 1;
	edgeV[6][2] = 2;
	edgeV[6][3] = 7;
	edgeV[7][0] = 4;//[7] has five edges
	edgeV[7][1] = 5;
	edgeV[7][2] = 6;
	edgeV[7][3] = 2;
	edgeV[7][4] = 3;
	for (unsigned int i = 0; i < 8; ++i)
	{
		for (unsigned int j = 0; j < cube.edgeCount[i]; ++j)
		{
			cube.edges[i][j] = edgeV[i][j];
			//Flattened indexing as well
			int index = i * 16 + j;
			cube.edgeAlt[index] = edgeV[i][j];
		}
	}

	//Sphere EdgeV
	edgeV[1][0] = 2;
	edgeV[2][0] = 1;
	edgeV[2][1] = 3;
	edgeV[3][0] = 2;
	edgeV[3][1] = 4;
	edgeV[4][0] = 3;
	edgeV[4][1] = 5;
	edgeV[5][0] = 4;
	edgeV[5][1] = 6;
	edgeV[6][0] = 5;
	edgeV[6][1] = 7;
	edgeV[7][0] = 6;
	edgeV[7][1] = 8;
	edgeV[8][0] = 7;
	edgeV[8][1] = 9;
	edgeV[9][0] = 8;
	edgeV[9][1] = 10;
	edgeV[10][0] = 9;
	edgeV[10][1] = 11;
	edgeV[11][0] = 10;
	edgeV[11][1] = 12;
	edgeV[12][0] = 11;
	edgeV[13][0] = 14;
	edgeV[14][0] = 13;
	edgeV[14][1] = 15;
	edgeV[15][0] = 14;
	edgeV[15][1] = 16;
	edgeV[16][0] = 15;
	edgeV[16][1] = 17;
	edgeV[17][0] = 16;
	edgeV[17][1] = 18;
	edgeV[18][0] = 17;
	edgeV[18][1] = 19;
	edgeV[19][0] = 18;
	edgeV[19][1] = 20;
	edgeV[20][0] = 19;
	edgeV[20][1] = 21;
	edgeV[21][0] = 20;
	edgeV[21][1] = 22;
	edgeV[22][0] = 21;
	edgeV[22][1] = 23;
	edgeV[23][0] = 22;
	edgeV[23][1] = 24;
	edgeV[24][0] = 23;
	edgeV[24][1] = 25;
	edgeV[25][0] = 24;
	edgeV[25][1] = 26;
	edgeV[26][0] = 25;
	edgeV[26][1] = 27;
	edgeV[27][0] = 26;
	edgeV[21][2] = 6;
	edgeV[6][2] = 21;
	edgeV[5][2] = 20;
	edgeV[20][2] = 5;
	edgeV[0][0] = 13;
	edgeV[13][1] = 0;
	edgeV[22][2] = 7;
	edgeV[7][2] = 22;
	edgeV[23][2] = 8;
	edgeV[8][2] = 23;
	edgeV[16][2] = 1;
	edgeV[1][1] = 16;
	edgeV[24][2] = 9;
	edgeV[9][2] = 24;
	edgeV[17][2] = 2;
	edgeV[2][2] = 17;
	edgeV[25][2] = 10;
	edgeV[10][2] = 25;
	edgeV[18][2] = 3;
	edgeV[3][2] = 18;
	edgeV[26][2] = 11;
	edgeV[11][2] = 26;
	edgeV[19][2] = 4;
	edgeV[4][2] = 19;
	edgeV[27][1] = 12;
	edgeV[12][1] = 27;
	edgeV[28][0] = 29;
	edgeV[29][0] = 28;
	edgeV[29][1] = 30;
	edgeV[30][0] = 29;
	edgeV[30][1] = 31;
	edgeV[31][0] = 30;
	edgeV[31][1] = 32;
	edgeV[32][0] = 31;
	edgeV[32][1] = 33;
	edgeV[33][0] = 32;
	edgeV[33][1] = 34;
	edgeV[34][0] = 33;
	edgeV[34][1] = 35;
	edgeV[35][0] = 34;
	edgeV[35][1] = 36;
	edgeV[36][0] = 35;
	edgeV[36][1] = 37;
	edgeV[37][0] = 36;
	edgeV[37][1] = 38;
	edgeV[38][0] = 37;
	edgeV[38][1] = 39;
	edgeV[39][0] = 38;
	edgeV[39][1] = 40;
	edgeV[40][0] = 39;
	edgeV[40][1] = 41;
	edgeV[41][0] = 40;
	edgeV[41][1] = 42;
	edgeV[42][0] = 41;
	edgeV[42][1] = 27;
	edgeV[27][2] = 42;
	edgeV[26][3] = 41;
	edgeV[41][2] = 26;
	edgeV[35][2] = 20;
	edgeV[20][3] = 35;
	edgeV[19][3] = 34;
	edgeV[34][2] = 19;
	edgeV[28][1] = 13;
	edgeV[13][2] = 28;
	edgeV[36][2] = 21;
	edgeV[21][3] = 36;
	edgeV[29][2] = 14;
	edgeV[14][2] = 29;
	edgeV[37][2] = 22;
	edgeV[22][3] = 37;
	edgeV[30][2] = 15;
	edgeV[15][2] = 30;
	edgeV[38][2] = 23;
	edgeV[23][3] = 38;
	edgeV[31][2] = 16;
	edgeV[16][3] = 31;
	edgeV[39][2] = 24;
	edgeV[24][3] = 39;
	edgeV[32][2] = 17;
	edgeV[17][3] = 32;
	edgeV[40][2] = 25;
	edgeV[25][3] = 40;
	edgeV[33][2] = 18;
	edgeV[18][3] = 33;
	edgeV[43][0] = 44;
	edgeV[44][0] = 43;
	edgeV[44][1] = 45;
	edgeV[45][0] = 44;
	edgeV[45][1] = 46;
	edgeV[46][0] = 45;
	edgeV[46][1] = 47;
	edgeV[47][0] = 46;
	edgeV[47][1] = 48;
	edgeV[48][0] = 47;
	edgeV[48][1] = 49;
	edgeV[49][0] = 48;
	edgeV[49][1] = 50;
	edgeV[50][0] = 49;
	edgeV[50][1] = 51;
	edgeV[51][0] = 50;
	edgeV[51][1] = 52;
	edgeV[52][0] = 51;
	edgeV[52][1] = 53;
	edgeV[53][0] = 52;
	edgeV[53][1] = 54;
	edgeV[54][0] = 53;
	edgeV[54][1] = 55;
	edgeV[55][0] = 54;
	edgeV[55][1] = 56;
	edgeV[56][0] = 55;
	edgeV[56][1] = 57;
	edgeV[57][0] = 56;
	edgeV[54][2] = 39;
	edgeV[39][3] = 54;
	edgeV[38][3] = 53;
	edgeV[53][2] = 38;
	edgeV[47][2] = 32;
	edgeV[32][3] = 47;
	edgeV[31][3] = 46;
	edgeV[46][2] = 31;
	edgeV[55][2] = 40;
	edgeV[40][3] = 55;
	edgeV[48][2] = 33;
	edgeV[33][3] = 48;
	edgeV[56][2] = 41;
	edgeV[41][3] = 56;
	edgeV[49][2] = 34;
	edgeV[34][3] = 49;
	edgeV[57][1] = 42;
	edgeV[42][2] = 57;
	edgeV[50][2] = 35;
	edgeV[35][3] = 50;
	edgeV[43][1] = 28;
	edgeV[28][2] = 43;
	edgeV[51][2] = 36;
	edgeV[36][3] = 51;
	edgeV[44][2] = 29;
	edgeV[29][3] = 44;
	edgeV[52][2] = 37;
	edgeV[37][3] = 52;
	edgeV[45][2] = 30;
	edgeV[30][3] = 45;
	edgeV[58][0] = 59;
	edgeV[59][0] = 58;
	edgeV[59][1] = 60;
	edgeV[60][0] = 59;
	edgeV[60][1] = 61;
	edgeV[61][0] = 60;
	edgeV[61][1] = 62;
	edgeV[62][0] = 61;
	edgeV[62][1] = 63;
	edgeV[63][0] = 62;
	edgeV[63][1] = 64;
	edgeV[64][0] = 63;
	edgeV[64][1] = 65;
	edgeV[65][0] = 64;
	edgeV[65][1] = 66;
	edgeV[66][0] = 65;
	edgeV[66][1] = 67;
	edgeV[67][0] = 66;
	edgeV[67][1] = 68;
	edgeV[68][0] = 67;
	edgeV[68][1] = 69;
	edgeV[69][0] = 68;
	edgeV[69][1] = 70;
	edgeV[70][0] = 69;
	edgeV[70][1] = 71;
	edgeV[71][0] = 70;
	edgeV[71][1] = 72;
	edgeV[72][0] = 71;
	edgeV[58][1] = 43;
	edgeV[43][2] = 58;
	edgeV[57][2] = 72;
	edgeV[72][1] = 57;
	edgeV[66][2] = 51;
	edgeV[51][3] = 66;
	edgeV[50][3] = 65;
	edgeV[65][2] = 50;
	edgeV[59][2] = 44;
	edgeV[44][3] = 59;
	edgeV[67][2] = 52;
	edgeV[52][3] = 67;
	edgeV[60][2] = 45;
	edgeV[45][3] = 60;
	edgeV[68][2] = 53;
	edgeV[53][3] = 68;
	edgeV[61][2] = 46;
	edgeV[46][3] = 61;
	edgeV[69][2] = 54;
	edgeV[54][3] = 69;
	edgeV[62][2] = 47;
	edgeV[47][3] = 62;
	edgeV[70][2] = 55;
	edgeV[55][3] = 70;
	edgeV[63][2] = 48;
	edgeV[48][3] = 63;
	edgeV[71][2] = 56;
	edgeV[56][3] = 71;
	edgeV[64][2] = 49;
	edgeV[49][3] = 64;
	edgeV[73][0] = 74;
	edgeV[74][0] = 73;
	edgeV[74][1] = 75;
	edgeV[75][0] = 74;
	edgeV[75][1] = 76;
	edgeV[76][0] = 75;
	edgeV[76][1] = 77;
	edgeV[77][0] = 76;
	edgeV[77][1] = 78;
	edgeV[78][0] = 77;
	edgeV[78][1] = 79;
	edgeV[79][0] = 78;
	edgeV[79][1] = 80;
	edgeV[80][0] = 79;
	edgeV[80][1] = 81;
	edgeV[81][0] = 80;
	edgeV[81][1] = 82;
	edgeV[82][0] = 81;
	edgeV[82][1] = 83;
	edgeV[83][0] = 82;
	edgeV[83][1] = 84;
	edgeV[84][0] = 83;
	edgeV[84][1] = 85;
	edgeV[85][0] = 84;
	edgeV[85][1] = 86;
	edgeV[86][0] = 85;
	edgeV[86][1] = 87;
	edgeV[87][0] = 86;
	edgeV[77][2] = 62;
	edgeV[62][3] = 77;
	edgeV[61][3] = 76;
	edgeV[76][2] = 61;
	edgeV[85][2] = 70;
	edgeV[70][3] = 85;
	edgeV[69][3] = 84;
	edgeV[84][2] = 69;
	edgeV[78][2] = 63;
	edgeV[63][3] = 78;
	edgeV[86][2] = 71;
	edgeV[71][3] = 86;
	edgeV[79][2] = 64;
	edgeV[64][3] = 79;
	edgeV[87][1] = 72;
	edgeV[72][2] = 87;
	edgeV[80][2] = 65;
	edgeV[65][3] = 80;
	edgeV[73][1] = 58;
	edgeV[58][2] = 73;
	edgeV[81][2] = 66;
	edgeV[66][3] = 81;
	edgeV[74][2] = 59;
	edgeV[59][3] = 74;
	edgeV[82][2] = 67;
	edgeV[67][3] = 82;
	edgeV[75][2] = 60;
	edgeV[60][3] = 75;
	edgeV[83][2] = 68;
	edgeV[68][3] = 83;
	edgeV[88][0] = 89;
	edgeV[89][0] = 88;
	edgeV[89][1] = 90;
	edgeV[90][0] = 89;
	edgeV[90][1] = 91;
	edgeV[91][0] = 90;
	edgeV[91][1] = 92;
	edgeV[92][0] = 91;
	edgeV[92][1] = 93;
	edgeV[93][0] = 92;
	edgeV[93][1] = 94;
	edgeV[94][0] = 93;
	edgeV[94][1] = 95;
	edgeV[95][0] = 94;
	edgeV[95][1] = 96;
	edgeV[96][0] = 95;
	edgeV[96][1] = 97;
	edgeV[97][0] = 96;
	edgeV[97][1] = 98;
	edgeV[98][0] = 97;
	edgeV[98][1] = 99;
	edgeV[99][0] = 98;
	edgeV[99][1] = 100;
	edgeV[100][0] = 99;
	edgeV[100][1] = 101;
	edgeV[101][0] = 100;
	edgeV[101][1] = 102;
	edgeV[102][0] = 101;
	edgeV[96][2] = 81;
	edgeV[81][3] = 96;
	edgeV[80][3] = 95;
	edgeV[95][2] = 80;
	edgeV[89][2] = 74;
	edgeV[74][3] = 89;
	edgeV[73][2] = 88;
	edgeV[88][1] = 73;
	edgeV[97][2] = 82;
	edgeV[82][3] = 97;
	edgeV[90][2] = 75;
	edgeV[75][3] = 90;
	edgeV[98][2] = 83;
	edgeV[83][3] = 98;
	edgeV[91][2] = 76;
	edgeV[76][3] = 91;
	edgeV[99][2] = 84;
	edgeV[84][3] = 99;
	edgeV[92][2] = 77;
	edgeV[77][3] = 92;
	edgeV[100][2] = 85;
	edgeV[85][3] = 100;
	edgeV[93][2] = 78;
	edgeV[78][3] = 93;
	edgeV[101][2] = 86;
	edgeV[86][3] = 101;
	edgeV[94][2] = 79;
	edgeV[79][3] = 94;
	edgeV[102][1] = 87;
	edgeV[87][2] = 102;
	edgeV[103][0] = 104;
	edgeV[104][0] = 103;
	edgeV[104][1] = 105;
	edgeV[105][0] = 104;
	edgeV[105][1] = 106;
	edgeV[106][0] = 105;
	edgeV[106][1] = 107;
	edgeV[107][0] = 106;
	edgeV[107][1] = 108;
	edgeV[108][0] = 107;
	edgeV[108][1] = 109;
	edgeV[109][0] = 108;
	edgeV[109][1] = 110;
	edgeV[110][0] = 109;
	edgeV[110][1] = 111;
	edgeV[111][0] = 110;
	edgeV[111][1] = 112;
	edgeV[112][0] = 111;
	edgeV[112][1] = 113;
	edgeV[113][0] = 112;
	edgeV[113][1] = 114;
	edgeV[114][0] = 113;
	edgeV[114][1] = 115;
	edgeV[115][0] = 114;
	edgeV[115][1] = 116;
	edgeV[116][0] = 115;
	edgeV[116][1] = 117;
	edgeV[117][0] = 116;
	edgeV[115][2] = 100;
	edgeV[100][3] = 115;
	edgeV[99][3] = 114;
	edgeV[114][2] = 99;
	edgeV[108][2] = 93;
	edgeV[93][3] = 108;
	edgeV[92][3] = 107;
	edgeV[107][2] = 92;
	edgeV[116][2] = 101;
	edgeV[101][3] = 116;
	edgeV[109][2] = 94;
	edgeV[94][3] = 109;
	edgeV[117][1] = 102;
	edgeV[102][2] = 117;
	edgeV[110][2] = 95;
	edgeV[95][3] = 110;
	edgeV[103][1] = 88;
	edgeV[88][2] = 103;
	edgeV[111][2] = 96;
	edgeV[96][3] = 111;
	edgeV[104][2] = 89;
	edgeV[89][3] = 104;
	edgeV[112][2] = 97;
	edgeV[97][3] = 112;
	edgeV[105][2] = 90;
	edgeV[90][3] = 105;
	edgeV[113][2] = 98;
	edgeV[98][3] = 113;
	edgeV[106][2] = 91;
	edgeV[91][3] = 106;
	edgeV[118][0] = 119;
	edgeV[119][0] = 118;
	edgeV[119][1] = 120;
	edgeV[120][0] = 119;
	edgeV[120][1] = 121;
	edgeV[121][0] = 120;
	edgeV[121][1] = 122;
	edgeV[122][0] = 121;
	edgeV[122][1] = 123;
	edgeV[123][0] = 122;
	edgeV[123][1] = 124;
	edgeV[124][0] = 123;
	edgeV[124][1] = 125;
	edgeV[125][0] = 124;
	edgeV[125][1] = 126;
	edgeV[126][0] = 125;
	edgeV[126][1] = 127;
	edgeV[127][0] = 126;
	edgeV[127][1] = 128;
	edgeV[128][0] = 127;
	edgeV[128][1] = 129;
	edgeV[129][0] = 128;
	edgeV[129][1] = 130;
	edgeV[130][0] = 129;
	edgeV[130][1] = 131;
	edgeV[131][0] = 130;
	edgeV[131][1] = 132;
	edgeV[132][0] = 131;
	edgeV[132][1] = 133;
	edgeV[133][0] = 132;
	edgeV[119][2] = 104;
	edgeV[104][3] = 119;
	edgeV[103][2] = 118;
	edgeV[118][1] = 103;
	edgeV[127][2] = 112;
	edgeV[112][3] = 127;
	edgeV[111][3] = 126;
	edgeV[126][2] = 111;
	edgeV[120][2] = 105;
	edgeV[105][3] = 120;
	edgeV[128][2] = 113;
	edgeV[113][3] = 128;
	edgeV[121][2] = 106;
	edgeV[106][3] = 121;
	edgeV[129][2] = 114;
	edgeV[114][3] = 129;
	edgeV[122][2] = 107;
	edgeV[107][3] = 122;
	edgeV[130][2] = 115;
	edgeV[115][3] = 130;
	edgeV[123][2] = 108;
	edgeV[108][3] = 123;
	edgeV[131][2] = 116;
	edgeV[116][3] = 131;
	edgeV[124][2] = 109;
	edgeV[109][3] = 124;
	edgeV[132][2] = 117;
	edgeV[117][2] = 132;
	edgeV[125][2] = 110;
	edgeV[110][3] = 125;
	edgeV[134][0] = 135;
	edgeV[135][0] = 134;
	edgeV[135][1] = 136;
	edgeV[136][0] = 135;
	edgeV[136][1] = 137;
	edgeV[137][0] = 136;
	edgeV[137][1] = 138;
	edgeV[138][0] = 137;
	edgeV[138][1] = 139;
	edgeV[139][0] = 138;
	edgeV[139][1] = 140;
	edgeV[140][0] = 139;
	edgeV[140][1] = 141;
	edgeV[141][0] = 140;
	edgeV[141][1] = 142;
	edgeV[142][0] = 141;
	edgeV[142][1] = 143;
	edgeV[143][0] = 142;
	edgeV[143][1] = 144;
	edgeV[144][0] = 143;
	edgeV[144][1] = 145;
	edgeV[145][0] = 144;
	edgeV[145][1] = 146;
	edgeV[146][0] = 145;
	edgeV[146][1] = 147;
	edgeV[147][0] = 146;
	edgeV[147][1] = 148;
	edgeV[148][0] = 147;
	edgeV[139][2] = 123;
	edgeV[123][3] = 139;
	edgeV[122][3] = 138;
	edgeV[138][2] = 122;
	edgeV[147][2] = 131;
	edgeV[131][3] = 147;
	edgeV[130][3] = 146;
	edgeV[146][2] = 130;
	edgeV[140][2] = 124;
	edgeV[124][3] = 140;
	edgeV[148][1] = 132;
	edgeV[132][3] = 148;
	edgeV[141][2] = 125;
	edgeV[125][3] = 141;
	edgeV[134][1] = 118;
	edgeV[118][2] = 134;
	edgeV[142][2] = 126;
	edgeV[126][3] = 142;
	edgeV[135][2] = 119;
	edgeV[119][3] = 135;
	edgeV[143][2] = 127;
	edgeV[127][3] = 143;
	edgeV[136][2] = 120;
	edgeV[120][3] = 136;
	edgeV[144][2] = 128;
	edgeV[128][3] = 144;
	edgeV[137][2] = 121;
	edgeV[121][3] = 137;
	edgeV[145][2] = 129;
	edgeV[129][3] = 145;
	edgeV[149][0] = 150;
	edgeV[150][0] = 149;
	edgeV[150][1] = 151;
	edgeV[151][0] = 150;
	edgeV[151][1] = 152;
	edgeV[152][0] = 151;
	edgeV[152][1] = 153;
	edgeV[153][0] = 152;
	edgeV[153][1] = 154;
	edgeV[154][0] = 153;
	edgeV[154][1] = 155;
	edgeV[155][0] = 154;
	edgeV[155][1] = 156;
	edgeV[156][0] = 155;
	edgeV[156][1] = 157;
	edgeV[157][0] = 156;
	edgeV[157][1] = 158;
	edgeV[158][0] = 157;
	edgeV[158][1] = 159;
	edgeV[159][0] = 158;
	edgeV[159][1] = 160;
	edgeV[160][0] = 159;
	edgeV[160][1] = 161;
	edgeV[161][0] = 160;
	edgeV[161][1] = 162;
	edgeV[162][0] = 161;
	edgeV[162][1] = 163;
	edgeV[163][0] = 162;
	edgeV[158][2] = 143;
	edgeV[143][3] = 158;
	edgeV[142][3] = 157;
	edgeV[157][2] = 142;
	edgeV[151][2] = 136;
	edgeV[136][3] = 151;
	edgeV[135][3] = 150;
	edgeV[150][2] = 135;
	edgeV[159][2] = 144;
	edgeV[144][3] = 159;
	edgeV[152][2] = 137;
	edgeV[137][3] = 152;
	edgeV[160][2] = 145;
	edgeV[145][3] = 160;
	edgeV[153][2] = 138;
	edgeV[138][3] = 153;
	edgeV[161][2] = 146;
	edgeV[146][3] = 161;
	edgeV[154][2] = 139;
	edgeV[139][3] = 154;
	edgeV[162][2] = 147;
	edgeV[147][3] = 162;
	edgeV[155][2] = 140;
	edgeV[140][3] = 155;
	edgeV[163][1] = 148;
	edgeV[148][2] = 163;
	edgeV[156][2] = 141;
	edgeV[141][3] = 156;
	edgeV[149][1] = 134;
	edgeV[134][2] = 149;
	edgeV[164][0] = 165;
	edgeV[165][0] = 164;
	edgeV[165][1] = 166;
	edgeV[166][0] = 165;
	edgeV[166][1] = 167;
	edgeV[167][0] = 166;
	edgeV[167][1] = 168;
	edgeV[168][0] = 167;
	edgeV[168][1] = 169;
	edgeV[169][0] = 168;
	edgeV[169][1] = 170;
	edgeV[170][0] = 169;
	edgeV[170][1] = 171;
	edgeV[171][0] = 170;
	edgeV[171][1] = 172;
	edgeV[172][0] = 171;
	edgeV[172][1] = 173;
	edgeV[173][0] = 172;
	edgeV[173][1] = 174;
	edgeV[174][0] = 173;
	edgeV[174][1] = 175;
	edgeV[175][0] = 174;
	edgeV[175][1] = 176;
	edgeV[176][0] = 175;
	edgeV[176][1] = 177;
	edgeV[177][0] = 176;
	edgeV[177][1] = 178;
	edgeV[178][0] = 177;
	edgeV[178][1] = 179;
	edgeV[179][0] = 178;
	edgeV[178][2] = 162;
	edgeV[162][3] = 178;
	edgeV[161][3] = 177;
	edgeV[177][2] = 161;
	edgeV[171][2] = 155;
	edgeV[155][3] = 171;
	edgeV[154][3] = 170;
	edgeV[170][2] = 154;
	edgeV[179][1] = 163;
	edgeV[163][2] = 179;
	edgeV[172][2] = 156;
	edgeV[156][3] = 172;
	edgeV[165][2] = 149;
	edgeV[149][2] = 165;
	edgeV[173][2] = 157;
	edgeV[157][3] = 173;
	edgeV[166][2] = 150;
	edgeV[150][3] = 166;
	edgeV[174][2] = 158;
	edgeV[158][3] = 174;
	edgeV[167][2] = 151;
	edgeV[151][3] = 167;
	edgeV[175][2] = 159;
	edgeV[159][3] = 175;
	edgeV[168][2] = 152;
	edgeV[152][3] = 168;
	edgeV[176][2] = 160;
	edgeV[160][3] = 176;
	edgeV[169][2] = 153;
	edgeV[153][3] = 169;
	edgeV[180][0] = 181;
	edgeV[181][0] = 180;
	edgeV[181][1] = 182;
	edgeV[182][0] = 181;
	edgeV[182][1] = 183;
	edgeV[183][0] = 182;
	edgeV[183][1] = 184;
	edgeV[184][0] = 183;
	edgeV[184][1] = 185;
	edgeV[185][0] = 184;
	edgeV[185][1] = 186;
	edgeV[186][0] = 185;
	edgeV[186][1] = 187;
	edgeV[187][0] = 186;
	edgeV[187][1] = 188;
	edgeV[188][0] = 187;
	edgeV[188][1] = 189;
	edgeV[189][0] = 188;
	edgeV[189][1] = 190;
	edgeV[190][0] = 189;
	edgeV[190][1] = 191;
	edgeV[191][0] = 190;
	edgeV[191][1] = 192;
	edgeV[192][0] = 191;
	edgeV[192][1] = 193;
	edgeV[193][0] = 192;
	edgeV[193][1] = 194;
	edgeV[194][0] = 193;
	edgeV[190][2] = 175;
	edgeV[175][3] = 190;
	edgeV[174][3] = 189;
	edgeV[189][2] = 174;
	edgeV[183][2] = 168;
	edgeV[168][3] = 183;
	edgeV[167][3] = 182;
	edgeV[182][2] = 167;
	edgeV[191][2] = 176;
	edgeV[176][3] = 191;
	edgeV[184][2] = 169;
	edgeV[169][3] = 184;
	edgeV[192][2] = 177;
	edgeV[177][3] = 192;
	edgeV[185][2] = 170;
	edgeV[170][3] = 185;
	edgeV[193][2] = 178;
	edgeV[178][3] = 193;
	edgeV[186][2] = 171;
	edgeV[171][3] = 186;
	edgeV[194][1] = 179;
	edgeV[179][2] = 194;
	edgeV[187][2] = 172;
	edgeV[172][3] = 187;
	edgeV[180][1] = 165;
	edgeV[165][3] = 180;
	edgeV[188][2] = 173;
	edgeV[173][3] = 188;
	edgeV[181][2] = 166;
	edgeV[166][3] = 181;
	edgeV[195][0] = 196;
	edgeV[196][0] = 195;
	edgeV[196][1] = 197;
	edgeV[197][0] = 196;
	edgeV[197][1] = 198;
	edgeV[198][0] = 197;
	edgeV[198][1] = 199;
	edgeV[199][0] = 198;
	edgeV[199][1] = 200;
	edgeV[200][0] = 199;
	edgeV[200][1] = 201;
	edgeV[201][0] = 200;
	edgeV[201][1] = 202;
	edgeV[202][0] = 201;
	edgeV[202][1] = 203;
	edgeV[203][0] = 202;
	edgeV[203][1] = 204;
	edgeV[204][0] = 203;
	edgeV[204][1] = 205;
	edgeV[205][0] = 204;
	edgeV[205][1] = 206;
	edgeV[206][0] = 205;
	edgeV[206][1] = 207;
	edgeV[207][0] = 206;
	edgeV[207][1] = 208;
	edgeV[208][0] = 207;
	edgeV[208][1] = 209;
	edgeV[209][0] = 208;
	edgeV[209][1] = 194;
	edgeV[194][2] = 209;
	edgeV[193][3] = 208;
	edgeV[208][2] = 193;
	edgeV[202][2] = 187;
	edgeV[187][3] = 202;
	edgeV[186][3] = 201;
	edgeV[201][2] = 186;
	edgeV[195][1] = 180;
	edgeV[180][2] = 195;
	edgeV[203][2] = 188;
	edgeV[188][3] = 203;
	edgeV[196][2] = 181;
	edgeV[181][3] = 196;
	edgeV[204][2] = 189;
	edgeV[189][3] = 204;
	edgeV[197][2] = 182;
	edgeV[182][3] = 197;
	edgeV[205][2] = 190;
	edgeV[190][3] = 205;
	edgeV[198][2] = 183;
	edgeV[183][3] = 198;
	edgeV[206][2] = 191;
	edgeV[191][3] = 206;
	edgeV[199][2] = 184;
	edgeV[184][3] = 199;
	edgeV[207][2] = 192;
	edgeV[192][3] = 207;
	edgeV[200][2] = 185;
	edgeV[185][3] = 200;
	edgeV[210][0] = 211;
	edgeV[211][0] = 210;
	edgeV[211][1] = 212;
	edgeV[212][0] = 211;
	edgeV[212][1] = 213;
	edgeV[213][0] = 212;
	edgeV[213][1] = 214;
	edgeV[214][0] = 213;
	edgeV[214][1] = 215;
	edgeV[215][0] = 214;
	edgeV[215][1] = 216;
	edgeV[216][0] = 215;
	edgeV[216][1] = 217;
	edgeV[217][0] = 216;
	edgeV[217][1] = 218;
	edgeV[218][0] = 217;
	edgeV[218][1] = 219;
	edgeV[219][0] = 218;
	edgeV[219][1] = 220;
	edgeV[220][0] = 219;
	edgeV[220][1] = 221;
	edgeV[221][0] = 220;
	edgeV[221][1] = 222;
	edgeV[222][0] = 221;
	edgeV[222][1] = 223;
	edgeV[223][0] = 222;
	edgeV[223][1] = 224;
	edgeV[224][0] = 223;
	edgeV[213][2] = 198;
	edgeV[198][3] = 213;
	edgeV[197][3] = 212;
	edgeV[212][2] = 197;
	edgeV[221][2] = 206;
	edgeV[206][3] = 221;
	edgeV[205][3] = 220;
	edgeV[220][2] = 205;
	edgeV[214][2] = 199;
	edgeV[199][3] = 214;
	edgeV[222][2] = 207;
	edgeV[207][3] = 222;
	edgeV[215][2] = 200;
	edgeV[200][3] = 215;
	edgeV[223][2] = 208;
	edgeV[208][3] = 223;
	edgeV[216][2] = 201;
	edgeV[201][3] = 216;
	edgeV[224][1] = 209;
	edgeV[209][2] = 224;
	edgeV[217][2] = 202;
	edgeV[202][3] = 217;
	edgeV[210][1] = 195;
	edgeV[195][2] = 210;
	edgeV[218][2] = 203;
	edgeV[203][3] = 218;
	edgeV[211][2] = 196;
	edgeV[196][3] = 211;
	edgeV[219][2] = 204;
	edgeV[204][3] = 219;
	edgeV[225][0] = 226;
	edgeV[226][0] = 225;
	edgeV[226][1] = 227;
	edgeV[227][0] = 226;
	edgeV[227][1] = 228;
	edgeV[228][0] = 227;
	edgeV[228][1] = 229;
	edgeV[229][0] = 228;
	edgeV[229][1] = 230;
	edgeV[230][0] = 229;
	edgeV[230][1] = 231;
	edgeV[231][0] = 230;
	edgeV[231][1] = 232;
	edgeV[232][0] = 231;
	edgeV[232][1] = 233;
	edgeV[233][0] = 232;
	edgeV[233][1] = 234;
	edgeV[234][0] = 233;
	edgeV[234][1] = 235;
	edgeV[235][0] = 234;
	edgeV[235][1] = 236;
	edgeV[236][0] = 235;
	edgeV[236][1] = 237;
	edgeV[237][0] = 236;
	edgeV[237][1] = 238;
	edgeV[238][0] = 237;
	edgeV[238][1] = 239;
	edgeV[239][0] = 238;
	edgeV[232][2] = 217;
	edgeV[217][3] = 232;
	edgeV[216][3] = 231;
	edgeV[231][2] = 216;
	edgeV[225][1] = 210;
	edgeV[210][2] = 225;
	edgeV[224][2] = 239;
	edgeV[239][1] = 224;
	edgeV[233][2] = 218;
	edgeV[218][3] = 233;
	edgeV[226][2] = 211;
	edgeV[211][3] = 226;
	edgeV[234][2] = 219;
	edgeV[219][3] = 234;
	edgeV[227][2] = 212;
	edgeV[212][3] = 227;
	edgeV[235][2] = 220;
	edgeV[220][3] = 235;
	edgeV[228][2] = 213;
	edgeV[213][3] = 228;
	edgeV[236][2] = 221;
	edgeV[221][3] = 236;
	edgeV[229][2] = 214;
	edgeV[214][3] = 229;
	edgeV[237][2] = 222;
	edgeV[222][3] = 237;
	edgeV[230][2] = 215;
	edgeV[215][3] = 230;
	edgeV[238][2] = 223;
	edgeV[223][3] = 238;
	edgeV[240][0] = 241;
	edgeV[241][0] = 240;
	edgeV[240][1] = 226;
	edgeV[226][3] = 240;
	edgeV[241][1] = 227;
	edgeV[227][3] = 241;
	edgeV[164][1] = 0;
	edgeV[0][1] = 164;
	edgeV[0][2] = 240;
	edgeV[240][2] = 0;
	edgeV[241][2] = 1;
	edgeV[1][2] = 241;
	edgeV[12][2] = 133;
	edgeV[133][1] = 12;
	edgeV[164][2] = 13;
	edgeV[13][3] = 164;
	edgeV[27][3] = 133;
	edgeV[133][2] = 27;
	edgeV[14][3] = 240;
	edgeV[240][3] = 14;
	edgeV[15][3] = 241;
	edgeV[241][3] = 15;
	edgeV[164][3] = 28;
	edgeV[28][3] = 164;
	edgeV[42][3] = 133;
	edgeV[133][3] = 42;
	edgeV[164][4] = 43;
	edgeV[43][3] = 164;
	edgeV[57][3] = 133;
	edgeV[133][4] = 57;
	edgeV[164][5] = 58;
	edgeV[58][3] = 164;
	edgeV[72][3] = 133;
	edgeV[133][5] = 72;
	edgeV[164][6] = 73;
	edgeV[73][3] = 164;
	edgeV[87][3] = 133;
	edgeV[133][6] = 87;
	edgeV[164][7] = 88;
	edgeV[88][3] = 164;
	edgeV[102][3] = 133;
	edgeV[133][7] = 102;
	edgeV[164][8] = 103;
	edgeV[103][3] = 164;
	edgeV[117][3] = 133;
	edgeV[133][8] = 117;
	edgeV[164][9] = 118;
	edgeV[118][3] = 164;
	edgeV[164][10] = 134;
	edgeV[134][3] = 164;
	edgeV[148][3] = 133;
	edgeV[133][9] = 148;
	edgeV[164][11] = 149;
	edgeV[149][3] = 164;
	edgeV[163][3] = 133;
	edgeV[133][10] = 163;
	edgeV[179][3] = 133;
	edgeV[133][11] = 179;
	edgeV[164][12] = 180;
	edgeV[180][3] = 164;
	edgeV[194][3] = 133;
	edgeV[133][12] = 194;
	edgeV[164][13] = 195;
	edgeV[195][3] = 164;
	edgeV[209][3] = 133;
	edgeV[133][13] = 209;
	edgeV[164][14] = 210;
	edgeV[210][3] = 164;
	edgeV[224][3] = 133;
	edgeV[133][14] = 224;
	edgeV[164][15] = 225;
	edgeV[225][2] = 164;
	edgeV[239][2] = 133;
	edgeV[133][15] = 239;
	edgeV[9][3] = 236;
	edgeV[236][3] = 9;
	edgeV[235][3] = 8;
	edgeV[8][3] = 235;
	edgeV[2][3] = 229;
	edgeV[229][3] = 2;
	edgeV[228][3] = 1;
	edgeV[1][3] = 228;
	edgeV[10][3] = 237;
	edgeV[237][3] = 10;
	edgeV[3][3] = 230;
	edgeV[230][3] = 3;
	edgeV[11][3] = 238;
	edgeV[238][3] = 11;
	edgeV[4][3] = 231;
	edgeV[231][3] = 4;
	edgeV[12][3] = 239;
	edgeV[239][3] = 12;
	edgeV[5][3] = 232;
	edgeV[232][3] = 5;
	edgeV[0][3] = 225;
	edgeV[225][3] = 0;
	edgeV[6][3] = 233;
	edgeV[233][3] = 6;
	edgeV[7][3] = 234;
	edgeV[234][3] = 7;
	for (unsigned int i = 0; i < 242; ++i)
	{
		for (unsigned int j = 0; j < sphere.edgeCount[i]; ++j)
		{
			sphere.edges[i][j] = edgeV[i][j];
			//Flattened indexing as well
			int index = i * 16 + j;
			sphere.edgeAlt[index] = edgeV[i][j];
		}
	}
	//End Sphere EdgeV
	//Suzanne EdgeV
	edgeV[0][0] = 2;
	edgeV[2][0] = 0;
	edgeV[3][0] = 1;
	edgeV[1][0] = 3;
	edgeV[13][0] = 11;
	edgeV[11][0] = 13;
	edgeV[11][1] = 35;
	edgeV[35][0] = 11;
	edgeV[35][1] = 37;
	edgeV[37][0] = 35;
	edgeV[37][1] = 13;
	edgeV[13][1] = 37;
	edgeV[37][2] = 36;
	edgeV[36][0] = 37;
	edgeV[36][1] = 12;
	edgeV[12][0] = 36;
	edgeV[12][1] = 13;
	edgeV[13][2] = 12;
	edgeV[11][2] = 9;
	edgeV[9][0] = 11;
	edgeV[9][1] = 33;
	edgeV[33][0] = 9;
	edgeV[33][1] = 35;
	edgeV[35][2] = 33;
	edgeV[36][2] = 34;
	edgeV[34][0] = 36;
	edgeV[34][1] = 10;
	edgeV[10][0] = 34;
	edgeV[10][1] = 12;
	edgeV[12][2] = 10;
	edgeV[9][2] = 7;
	edgeV[7][0] = 9;
	edgeV[7][1] = 31;
	edgeV[31][0] = 7;
	edgeV[31][1] = 33;
	edgeV[33][2] = 31;
	edgeV[34][2] = 32;
	edgeV[32][0] = 34;
	edgeV[32][1] = 8;
	edgeV[8][0] = 32;
	edgeV[8][1] = 10;
	edgeV[10][2] = 8;
	edgeV[16][0] = 27;
	edgeV[27][0] = 16;
	edgeV[28][0] = 17;
	edgeV[17][0] = 28;
	edgeV[29][0] = 27;
	edgeV[27][1] = 29;
	edgeV[28][1] = 30;
	edgeV[30][0] = 28;
	edgeV[35][3] = 23;
	edgeV[23][0] = 35;
	edgeV[24][0] = 36;
	edgeV[36][3] = 24;
	edgeV[33][3] = 21;
	edgeV[21][0] = 33;
	edgeV[21][1] = 23;
	edgeV[23][1] = 21;
	edgeV[24][1] = 22;
	edgeV[22][0] = 24;
	edgeV[22][1] = 34;
	edgeV[34][3] = 22;
	edgeV[19][0] = 21;
	edgeV[21][2] = 19;
	edgeV[22][2] = 20;
	edgeV[20][0] = 22;
	edgeV[18][0] = 19;
	edgeV[19][1] = 18;
	edgeV[20][1] = 18;
	edgeV[18][1] = 20;
	edgeV[13][3] = 43;
	edgeV[43][0] = 13;
	edgeV[44][0] = 9;
	edgeV[9][3] = 44;
	edgeV[10][3] = 45;
	edgeV[45][0] = 10;
	edgeV[42][0] = 6;
	edgeV[6][0] = 42;
	edgeV[6][1] = 5;
	edgeV[5][0] = 6;
	edgeV[41][0] = 40;
	edgeV[40][0] = 41;
	edgeV[50][0] = 48;
	edgeV[48][0] = 50;
	edgeV[48][1] = 41;
	edgeV[41][1] = 48;
	edgeV[41][2] = 49;
	edgeV[49][0] = 41;
	edgeV[49][1] = 51;
	edgeV[51][0] = 49;
	edgeV[4][0] = 41;
	edgeV[41][3] = 4;
	edgeV[48][2] = 46;
	edgeV[46][0] = 48;
	edgeV[46][1] = 4;
	edgeV[4][1] = 46;
	edgeV[4][2] = 47;
	edgeV[47][0] = 4;
	edgeV[47][1] = 49;
	edgeV[49][2] = 47;
	edgeV[5][1] = 4;
	edgeV[4][3] = 5;
	edgeV[54][0] = 56;
	edgeV[56][0] = 54;
	edgeV[57][0] = 55;
	edgeV[55][0] = 57;
	edgeV[52][0] = 54;
	edgeV[54][1] = 52;
	edgeV[55][1] = 53;
	edgeV[53][0] = 55;
	edgeV[62][0] = 52;
	edgeV[52][1] = 62;
	edgeV[64][0] = 62;
	edgeV[62][1] = 64;
	edgeV[63][0] = 65;
	edgeV[65][0] = 63;
	edgeV[53][1] = 63;
	edgeV[63][1] = 53;
	edgeV[60][0] = 54;
	edgeV[54][2] = 60;
	edgeV[62][2] = 60;
	edgeV[60][1] = 62;
	edgeV[61][0] = 63;
	edgeV[63][2] = 61;
	edgeV[55][2] = 61;
	edgeV[61][1] = 55;
	edgeV[58][0] = 56;
	edgeV[56][1] = 58;
	edgeV[60][2] = 58;
	edgeV[58][1] = 60;
	edgeV[59][0] = 61;
	edgeV[61][2] = 59;
	edgeV[57][1] = 59;
	edgeV[59][1] = 57;
	edgeV[58][2] = 62;
	edgeV[62][3] = 58;
	edgeV[63][3] = 59;
	edgeV[59][2] = 63;
	edgeV[56][2] = 50;
	edgeV[50][1] = 56;
	edgeV[50][2] = 14;
	edgeV[14][0] = 50;
	edgeV[14][1] = 56;
	edgeV[56][3] = 14;
	edgeV[50][3] = 16;
	edgeV[16][1] = 50;
	edgeV[16][2] = 14;
	edgeV[14][2] = 16;
	edgeV[27][2] = 14;
	edgeV[14][3] = 27;
	edgeV[27][3] = 25;
	edgeV[25][0] = 27;
	edgeV[25][1] = 14;
	edgeV[14][4] = 25;
	edgeV[0][1] = 38;
	edgeV[38][0] = 0;
	edgeV[38][1] = 2;
	edgeV[2][1] = 38;
	edgeV[0][2] = 29;
	edgeV[29][1] = 0;
	edgeV[29][2] = 38;
	edgeV[38][2] = 29;
	edgeV[29][3] = 30;
	edgeV[30][1] = 29;
	edgeV[30][2] = 39;
	edgeV[39][0] = 30;
	edgeV[39][1] = 38;
	edgeV[38][3] = 39;
	edgeV[39][2] = 18;
	edgeV[18][2] = 39;
	edgeV[19][2] = 38;
	edgeV[38][4] = 19;
	edgeV[27][4] = 0;
	edgeV[0][3] = 27;
	edgeV[0][4] = 25;
	edgeV[25][2] = 0;
	edgeV[2][2] = 25;
	edgeV[25][3] = 2;
	edgeV[39][3] = 20;
	edgeV[20][2] = 39;
	edgeV[30][3] = 1;
	edgeV[1][1] = 30;
	edgeV[1][2] = 39;
	edgeV[39][4] = 1;
	edgeV[43][1] = 11;
	edgeV[11][3] = 43;
	edgeV[3][1] = 39;
	edgeV[39][5] = 3;
	edgeV[1][3] = 26;
	edgeV[26][0] = 1;
	edgeV[26][1] = 3;
	edgeV[3][2] = 26;
	edgeV[1][4] = 28;
	edgeV[28][2] = 1;
	edgeV[28][3] = 26;
	edgeV[26][2] = 28;
	edgeV[12][3] = 43;
	edgeV[43][2] = 12;
	edgeV[27][5] = 30;
	edgeV[30][4] = 27;
	edgeV[27][6] = 28;
	edgeV[28][4] = 27;
	edgeV[10][4] = 43;
	edgeV[43][3] = 10;
	edgeV[45][1] = 43;
	edgeV[43][4] = 45;
	edgeV[16][3] = 17;
	edgeV[17][1] = 16;
	edgeV[45][2] = 42;
	edgeV[42][1] = 45;
	edgeV[42][2] = 43;
	edgeV[43][5] = 42;
	edgeV[42][3] = 44;
	edgeV[44][1] = 42;
	edgeV[44][2] = 43;
	edgeV[43][6] = 44;
	edgeV[51][1] = 17;
	edgeV[17][2] = 51;
	edgeV[17][3] = 49;
	edgeV[49][3] = 17;
	edgeV[16][4] = 40;
	edgeV[40][1] = 16;
	edgeV[40][2] = 17;
	edgeV[17][4] = 40;
	edgeV[9][4] = 43;
	edgeV[43][7] = 9;
	edgeV[41][4] = 17;
	edgeV[17][5] = 41;
	edgeV[49][4] = 57;
	edgeV[57][2] = 49;
	edgeV[57][3] = 51;
	edgeV[51][2] = 57;
	edgeV[23][2] = 37;
	edgeV[37][3] = 23;
	edgeV[37][4] = 24;
	edgeV[24][2] = 37;
	edgeV[23][3] = 24;
	edgeV[24][3] = 23;
	edgeV[48][3] = 56;
	edgeV[56][4] = 48;
	edgeV[8][2] = 63;
	edgeV[63][4] = 8;
	edgeV[63][5] = 10;
	edgeV[10][5] = 63;
	edgeV[48][4] = 16;
	edgeV[16][5] = 48;
	edgeV[41][5] = 16;
	edgeV[16][6] = 41;
	edgeV[63][6] = 45;
	edgeV[45][3] = 63;
	edgeV[65][1] = 45;
	edgeV[45][4] = 65;
	edgeV[65][2] = 42;
	edgeV[42][4] = 65;
	edgeV[6][2] = 62;
	edgeV[62][4] = 6;
	edgeV[62][5] = 42;
	edgeV[42][5] = 62;
	edgeV[64][1] = 42;
	edgeV[42][6] = 64;
	edgeV[64][2] = 44;
	edgeV[44][3] = 64;
	edgeV[63][7] = 42;
	edgeV[42][7] = 63;
	edgeV[63][8] = 6;
	edgeV[6][3] = 63;
	edgeV[62][6] = 44;
	edgeV[44][4] = 62;
	edgeV[62][7] = 9;
	edgeV[9][5] = 62;
	edgeV[62][8] = 7;
	edgeV[7][2] = 62;
	edgeV[31][2] = 21;
	edgeV[21][3] = 31;
	edgeV[21][4] = 22;
	edgeV[22][3] = 21;
	edgeV[24][4] = 21;
	edgeV[21][5] = 24;
	edgeV[22][4] = 32;
	edgeV[32][2] = 22;
	edgeV[15][0] = 8;
	edgeV[8][3] = 15;
	edgeV[15][1] = 53;
	edgeV[53][2] = 15;
	edgeV[53][3] = 8;
	edgeV[8][4] = 53;
	edgeV[59][3] = 5;
	edgeV[5][2] = 59;
	edgeV[52][2] = 7;
	edgeV[7][3] = 52;
	edgeV[5][3] = 58;
	edgeV[58][3] = 5;
	edgeV[52][3] = 14;
	edgeV[14][5] = 52;
	edgeV[14][6] = 7;
	edgeV[7][4] = 14;
	edgeV[38][5] = 21;
	edgeV[21][6] = 38;
	edgeV[31][3] = 38;
	edgeV[38][6] = 31;
	edgeV[25][4] = 31;
	edgeV[31][4] = 25;
	edgeV[2][3] = 31;
	edgeV[31][5] = 2;
	edgeV[18][3] = 21;
	edgeV[21][7] = 18;
	edgeV[18][4] = 22;
	edgeV[22][5] = 18;
	edgeV[39][6] = 22;
	edgeV[22][6] = 39;
	edgeV[39][7] = 32;
	edgeV[32][3] = 39;
	edgeV[3][3] = 32;
	edgeV[32][4] = 3;
	edgeV[26][3] = 32;
	edgeV[32][5] = 26;
	edgeV[26][4] = 15;
	edgeV[15][2] = 26;
	edgeV[28][5] = 15;
	edgeV[15][3] = 28;
	edgeV[17][6] = 15;
	edgeV[15][4] = 17;
	edgeV[51][3] = 15;
	edgeV[15][5] = 51;
	edgeV[57][4] = 15;
	edgeV[15][6] = 57;
	edgeV[55][3] = 15;
	edgeV[15][7] = 55;
	edgeV[47][2] = 59;
	edgeV[59][4] = 47;
	edgeV[4][4] = 59;
	edgeV[59][5] = 4;
	edgeV[4][5] = 58;
	edgeV[58][4] = 4;
	edgeV[58][5] = 46;
	edgeV[46][2] = 58;
	edgeV[14][7] = 54;
	edgeV[54][3] = 14;
	//End Suzanne EdgeV
	for (unsigned int i = 0; i < 66; ++i)
	{
		for (unsigned int j = 0; j < suzanne.edgeCount[i]; ++j)
		{
			suzanne.edges[i][j] = edgeV[i][j];
			//Flattened indexing as well
			int index = i * 16 + j;
			suzanne.edgeAlt[index] = edgeV[i][j];
		}
	}
}

void buildFaces()
{
	Indices3 fV[480];
	fV[0].ind[0] = 1;
	fV[0].ind[1] = 0;
	fV[0].ind[2] = 2;
	fV[1].ind[0] = 3;
	fV[1].ind[1] = 2;
	fV[1].ind[2] = 6;
	fV[2].ind[0] = 7;
	fV[2].ind[1] = 6;
	fV[2].ind[2] = 4;
	fV[3].ind[0] = 5;
	fV[3].ind[1] = 4;
	fV[3].ind[2] = 0;
	fV[4].ind[0] = 6;
	fV[4].ind[1] = 2;
	fV[4].ind[2] = 0;
	fV[5].ind[0] = 3;
	fV[5].ind[1] = 7;
	fV[5].ind[2] = 5;
	fV[6].ind[0] = 1;
	fV[6].ind[1] = 2;
	fV[6].ind[2] = 3;
	fV[7].ind[0] = 3;
	fV[7].ind[1] = 6;
	fV[7].ind[2] = 7;
	fV[8].ind[0] = 7;
	fV[8].ind[1] = 4;
	fV[8].ind[2] = 5;
	fV[9].ind[0] = 5;
	fV[9].ind[1] = 0;
	fV[9].ind[2] = 1;
	fV[10].ind[0] = 6;
	fV[10].ind[1] = 0;
	fV[10].ind[2] = 4;
	fV[11].ind[0] = 3;
	fV[11].ind[1] = 5;
	fV[11].ind[2] = 1;

	for (int i = 0; i < cube.faceCount; ++i)
	{
		cube.faceVerts[i].ind[0] = fV[i].ind[0];
		cube.faceVerts[i].ind[1] = fV[i].ind[1];
		cube.faceVerts[i].ind[2] = fV[i].ind[2];
		vec3 A = cube.vertices[fV[i].ind[1]] - cube.vertices[fV[i].ind[0]];
		vec3 B = cube.vertices[fV[i].ind[2]] - cube.vertices[fV[i].ind[0]];
		vec3 normal = cross(A, B);
		cube.faces[i] = normalize(normal);
		cube.faceEdges[i].edge[0] = A;
		cube.faceEdges[i].edge[1] = B;
	}

	fV[0].ind[0] = 4;
	fV[0].ind[1] = 5;
	fV[0].ind[2] = 20;
	fV[1].ind[0] = 0;
	fV[1].ind[1] = 13;
	fV[1].ind[2] = 164;
	fV[2].ind[0] = 133;
	fV[2].ind[1] = 27;
	fV[2].ind[2] = 12;
	fV[3].ind[0] = 5;
	fV[3].ind[1] = 6;
	fV[3].ind[2] = 21;
	fV[4].ind[0] = 240;
	fV[4].ind[1] = 14;
	fV[4].ind[2] = 13;
	fV[5].ind[0] = 6;
	fV[5].ind[1] = 7;
	fV[5].ind[2] = 22;
	fV[6].ind[0] = 241;
	fV[6].ind[1] = 15;
	fV[6].ind[2] = 14;
	fV[7].ind[0] = 7;
	fV[7].ind[1] = 8;
	fV[7].ind[2] = 23;
	fV[8].ind[0] = 241;
	fV[8].ind[1] = 1;
	fV[8].ind[2] = 16;
	fV[9].ind[0] = 8;
	fV[9].ind[1] = 9;
	fV[9].ind[2] = 24;
	fV[10].ind[0] = 1;
	fV[10].ind[1] = 2;
	fV[10].ind[2] = 17;
	fV[11].ind[0] = 9;
	fV[11].ind[1] = 10;
	fV[11].ind[2] = 25;
	fV[12].ind[0] = 2;
	fV[12].ind[1] = 3;
	fV[12].ind[2] = 18;
	fV[13].ind[0] = 11;
	fV[13].ind[1] = 26;
	fV[13].ind[2] = 25;
	fV[14].ind[0] = 3;
	fV[14].ind[1] = 4;
	fV[14].ind[2] = 19;
	fV[15].ind[0] = 12;
	fV[15].ind[1] = 27;
	fV[15].ind[2] = 26;
	fV[16].ind[0] = 25;
	fV[16].ind[1] = 26;
	fV[16].ind[2] = 41;
	fV[17].ind[0] = 18;
	fV[17].ind[1] = 19;
	fV[17].ind[2] = 34;
	fV[18].ind[0] = 26;
	fV[18].ind[1] = 27;
	fV[18].ind[2] = 42;
	fV[19].ind[0] = 19;
	fV[19].ind[1] = 20;
	fV[19].ind[2] = 35;
	fV[20].ind[0] = 13;
	fV[20].ind[1] = 28;
	fV[20].ind[2] = 164;
	fV[21].ind[0] = 133;
	fV[21].ind[1] = 42;
	fV[21].ind[2] = 27;
	fV[22].ind[0] = 20;
	fV[22].ind[1] = 21;
	fV[22].ind[2] = 36;
	fV[23].ind[0] = 13;
	fV[23].ind[1] = 14;
	fV[23].ind[2] = 29;
	fV[24].ind[0] = 22;
	fV[24].ind[1] = 37;
	fV[24].ind[2] = 36;
	fV[25].ind[0] = 14;
	fV[25].ind[1] = 15;
	fV[25].ind[2] = 30;
	fV[26].ind[0] = 22;
	fV[26].ind[1] = 23;
	fV[26].ind[2] = 38;
	fV[27].ind[0] = 15;
	fV[27].ind[1] = 16;
	fV[27].ind[2] = 31;
	fV[28].ind[0] = 23;
	fV[28].ind[1] = 24;
	fV[28].ind[2] = 39;
	fV[29].ind[0] = 16;
	fV[29].ind[1] = 17;
	fV[29].ind[2] = 32;
	fV[30].ind[0] = 24;
	fV[30].ind[1] = 25;
	fV[30].ind[2] = 40;
	fV[31].ind[0] = 17;
	fV[31].ind[1] = 18;
	fV[31].ind[2] = 33;
	fV[32].ind[0] = 37;
	fV[32].ind[1] = 38;
	fV[32].ind[2] = 53;
	fV[33].ind[0] = 30;
	fV[33].ind[1] = 31;
	fV[33].ind[2] = 46;
	fV[34].ind[0] = 39;
	fV[34].ind[1] = 54;
	fV[34].ind[2] = 53;
	fV[35].ind[0] = 31;
	fV[35].ind[1] = 32;
	fV[35].ind[2] = 47;
	fV[36].ind[0] = 40;
	fV[36].ind[1] = 55;
	fV[36].ind[2] = 54;
	fV[37].ind[0] = 33;
	fV[37].ind[1] = 48;
	fV[37].ind[2] = 47;
	fV[38].ind[0] = 41;
	fV[38].ind[1] = 56;
	fV[38].ind[2] = 55;
	fV[39].ind[0] = 33;
	fV[39].ind[1] = 34;
	fV[39].ind[2] = 49;
	fV[40].ind[0] = 41;
	fV[40].ind[1] = 42;
	fV[40].ind[2] = 57;
	fV[41].ind[0] = 34;
	fV[41].ind[1] = 35;
	fV[41].ind[2] = 50;
	fV[42].ind[0] = 28;
	fV[42].ind[1] = 43;
	fV[42].ind[2] = 164;
	fV[43].ind[0] = 133;
	fV[43].ind[1] = 57;
	fV[43].ind[2] = 42;
	fV[44].ind[0] = 35;
	fV[44].ind[1] = 36;
	fV[44].ind[2] = 51;
	fV[45].ind[0] = 28;
	fV[45].ind[1] = 29;
	fV[45].ind[2] = 44;
	fV[46].ind[0] = 36;
	fV[46].ind[1] = 37;
	fV[46].ind[2] = 52;
	fV[47].ind[0] = 29;
	fV[47].ind[1] = 30;
	fV[47].ind[2] = 45;
	fV[48].ind[0] = 56;
	fV[48].ind[1] = 57;
	fV[48].ind[2] = 72;
	fV[49].ind[0] = 50;
	fV[49].ind[1] = 65;
	fV[49].ind[2] = 64;
	fV[50].ind[0] = 43;
	fV[50].ind[1] = 58;
	fV[50].ind[2] = 164;
	fV[51].ind[0] = 133;
	fV[51].ind[1] = 72;
	fV[51].ind[2] = 57;
	fV[52].ind[0] = 50;
	fV[52].ind[1] = 51;
	fV[52].ind[2] = 66;
	fV[53].ind[0] = 43;
	fV[53].ind[1] = 44;
	fV[53].ind[2] = 59;
	fV[54].ind[0] = 52;
	fV[54].ind[1] = 67;
	fV[54].ind[2] = 66;
	fV[55].ind[0] = 44;
	fV[55].ind[1] = 45;
	fV[55].ind[2] = 60;
	fV[56].ind[0] = 52;
	fV[56].ind[1] = 53;
	fV[56].ind[2] = 68;
	fV[57].ind[0] = 45;
	fV[57].ind[1] = 46;
	fV[57].ind[2] = 61;
	fV[58].ind[0] = 54;
	fV[58].ind[1] = 69;
	fV[58].ind[2] = 68;
	fV[59].ind[0] = 46;
	fV[59].ind[1] = 47;
	fV[59].ind[2] = 62;
	fV[60].ind[0] = 54;
	fV[60].ind[1] = 55;
	fV[60].ind[2] = 70;
	fV[61].ind[0] = 48;
	fV[61].ind[1] = 63;
	fV[61].ind[2] = 62;
	fV[62].ind[0] = 56;
	fV[62].ind[1] = 71;
	fV[62].ind[2] = 70;
	fV[63].ind[0] = 48;
	fV[63].ind[1] = 49;
	fV[63].ind[2] = 64;
	fV[64].ind[0] = 60;
	fV[64].ind[1] = 61;
	fV[64].ind[2] = 76;
	fV[65].ind[0] = 68;
	fV[65].ind[1] = 69;
	fV[65].ind[2] = 84;
	fV[66].ind[0] = 61;
	fV[66].ind[1] = 62;
	fV[66].ind[2] = 77;
	fV[67].ind[0] = 69;
	fV[67].ind[1] = 70;
	fV[67].ind[2] = 85;
	fV[68].ind[0] = 62;
	fV[68].ind[1] = 63;
	fV[68].ind[2] = 78;
	fV[69].ind[0] = 70;
	fV[69].ind[1] = 71;
	fV[69].ind[2] = 86;
	fV[70].ind[0] = 63;
	fV[70].ind[1] = 64;
	fV[70].ind[2] = 79;
	fV[71].ind[0] = 71;
	fV[71].ind[1] = 72;
	fV[71].ind[2] = 87;
	fV[72].ind[0] = 65;
	fV[72].ind[1] = 80;
	fV[72].ind[2] = 79;
	fV[73].ind[0] = 58;
	fV[73].ind[1] = 73;
	fV[73].ind[2] = 164;
	fV[74].ind[0] = 133;
	fV[74].ind[1] = 87;
	fV[74].ind[2] = 72;
	fV[75].ind[0] = 65;
	fV[75].ind[1] = 66;
	fV[75].ind[2] = 81;
	fV[76].ind[0] = 59;
	fV[76].ind[1] = 74;
	fV[76].ind[2] = 73;
	fV[77].ind[0] = 67;
	fV[77].ind[1] = 82;
	fV[77].ind[2] = 81;
	fV[78].ind[0] = 59;
	fV[78].ind[1] = 60;
	fV[78].ind[2] = 75;
	fV[79].ind[0] = 67;
	fV[79].ind[1] = 68;
	fV[79].ind[2] = 83;
	fV[80].ind[0] = 80;
	fV[80].ind[1] = 95;
	fV[80].ind[2] = 94;
	fV[81].ind[0] = 73;
	fV[81].ind[1] = 88;
	fV[81].ind[2] = 164;
	fV[82].ind[0] = 133;
	fV[82].ind[1] = 102;
	fV[82].ind[2] = 87;
	fV[83].ind[0] = 80;
	fV[83].ind[1] = 81;
	fV[83].ind[2] = 96;
	fV[84].ind[0] = 73;
	fV[84].ind[1] = 74;
	fV[84].ind[2] = 89;
	fV[85].ind[0] = 82;
	fV[85].ind[1] = 97;
	fV[85].ind[2] = 96;
	fV[86].ind[0] = 74;
	fV[86].ind[1] = 75;
	fV[86].ind[2] = 90;
	fV[87].ind[0] = 83;
	fV[87].ind[1] = 98;
	fV[87].ind[2] = 97;
	fV[88].ind[0] = 75;
	fV[88].ind[1] = 76;
	fV[88].ind[2] = 91;
	fV[89].ind[0] = 83;
	fV[89].ind[1] = 84;
	fV[89].ind[2] = 99;
	fV[90].ind[0] = 76;
	fV[90].ind[1] = 77;
	fV[90].ind[2] = 92;
	fV[91].ind[0] = 85;
	fV[91].ind[1] = 100;
	fV[91].ind[2] = 99;
	fV[92].ind[0] = 77;
	fV[92].ind[1] = 78;
	fV[92].ind[2] = 93;
	fV[93].ind[0] = 86;
	fV[93].ind[1] = 101;
	fV[93].ind[2] = 100;
	fV[94].ind[0] = 78;
	fV[94].ind[1] = 79;
	fV[94].ind[2] = 94;
	fV[95].ind[0] = 86;
	fV[95].ind[1] = 87;
	fV[95].ind[2] = 102;
	fV[96].ind[0] = 98;
	fV[96].ind[1] = 99;
	fV[96].ind[2] = 114;
	fV[97].ind[0] = 92;
	fV[97].ind[1] = 107;
	fV[97].ind[2] = 106;
	fV[98].ind[0] = 100;
	fV[98].ind[1] = 115;
	fV[98].ind[2] = 114;
	fV[99].ind[0] = 92;
	fV[99].ind[1] = 93;
	fV[99].ind[2] = 108;
	fV[100].ind[0] = 101;
	fV[100].ind[1] = 116;
	fV[100].ind[2] = 115;
	fV[101].ind[0] = 93;
	fV[101].ind[1] = 94;
	fV[101].ind[2] = 109;
	fV[102].ind[0] = 101;
	fV[102].ind[1] = 102;
	fV[102].ind[2] = 117;
	fV[103].ind[0] = 95;
	fV[103].ind[1] = 110;
	fV[103].ind[2] = 109;
	fV[104].ind[0] = 88;
	fV[104].ind[1] = 103;
	fV[104].ind[2] = 164;
	fV[105].ind[0] = 133;
	fV[105].ind[1] = 117;
	fV[105].ind[2] = 102;
	fV[106].ind[0] = 95;
	fV[106].ind[1] = 96;
	fV[106].ind[2] = 111;
	fV[107].ind[0] = 88;
	fV[107].ind[1] = 89;
	fV[107].ind[2] = 104;
	fV[108].ind[0] = 97;
	fV[108].ind[1] = 112;
	fV[108].ind[2] = 111;
	fV[109].ind[0] = 89;
	fV[109].ind[1] = 90;
	fV[109].ind[2] = 105;
	fV[110].ind[0] = 97;
	fV[110].ind[1] = 98;
	fV[110].ind[2] = 113;
	fV[111].ind[0] = 90;
	fV[111].ind[1] = 91;
	fV[111].ind[2] = 106;
	fV[112].ind[0] = 103;
	fV[112].ind[1] = 118;
	fV[112].ind[2] = 164;
	fV[113].ind[0] = 133;
	fV[113].ind[1] = 132;
	fV[113].ind[2] = 117;
	fV[114].ind[0] = 110;
	fV[114].ind[1] = 111;
	fV[114].ind[2] = 126;
	fV[115].ind[0] = 103;
	fV[115].ind[1] = 104;
	fV[115].ind[2] = 119;
	fV[116].ind[0] = 112;
	fV[116].ind[1] = 127;
	fV[116].ind[2] = 126;
	fV[117].ind[0] = 104;
	fV[117].ind[1] = 105;
	fV[117].ind[2] = 120;
	fV[118].ind[0] = 112;
	fV[118].ind[1] = 113;
	fV[118].ind[2] = 128;
	fV[119].ind[0] = 105;
	fV[119].ind[1] = 106;
	fV[119].ind[2] = 121;
	fV[120].ind[0] = 113;
	fV[120].ind[1] = 114;
	fV[120].ind[2] = 129;
	fV[121].ind[0] = 107;
	fV[121].ind[1] = 122;
	fV[121].ind[2] = 121;
	fV[122].ind[0] = 115;
	fV[122].ind[1] = 130;
	fV[122].ind[2] = 129;
	fV[123].ind[0] = 107;
	fV[123].ind[1] = 108;
	fV[123].ind[2] = 123;
	fV[124].ind[0] = 116;
	fV[124].ind[1] = 131;
	fV[124].ind[2] = 130;
	fV[125].ind[0] = 108;
	fV[125].ind[1] = 109;
	fV[125].ind[2] = 124;
	fV[126].ind[0] = 116;
	fV[126].ind[1] = 117;
	fV[126].ind[2] = 132;
	fV[127].ind[0] = 110;
	fV[127].ind[1] = 125;
	fV[127].ind[2] = 124;
	fV[128].ind[0] = 122;
	fV[128].ind[1] = 138;
	fV[128].ind[2] = 137;
	fV[129].ind[0] = 130;
	fV[129].ind[1] = 146;
	fV[129].ind[2] = 145;
	fV[130].ind[0] = 122;
	fV[130].ind[1] = 123;
	fV[130].ind[2] = 139;
	fV[131].ind[0] = 131;
	fV[131].ind[1] = 147;
	fV[131].ind[2] = 146;
	fV[132].ind[0] = 123;
	fV[132].ind[1] = 124;
	fV[132].ind[2] = 140;
	fV[133].ind[0] = 131;
	fV[133].ind[1] = 132;
	fV[133].ind[2] = 148;
	fV[134].ind[0] = 125;
	fV[134].ind[1] = 141;
	fV[134].ind[2] = 140;
	fV[135].ind[0] = 118;
	fV[135].ind[1] = 134;
	fV[135].ind[2] = 164;
	fV[136].ind[0] = 133;
	fV[136].ind[1] = 148;
	fV[136].ind[2] = 132;
	fV[137].ind[0] = 125;
	fV[137].ind[1] = 126;
	fV[137].ind[2] = 142;
	fV[138].ind[0] = 118;
	fV[138].ind[1] = 119;
	fV[138].ind[2] = 135;
	fV[139].ind[0] = 127;
	fV[139].ind[1] = 143;
	fV[139].ind[2] = 142;
	fV[140].ind[0] = 119;
	fV[140].ind[1] = 120;
	fV[140].ind[2] = 136;
	fV[141].ind[0] = 127;
	fV[141].ind[1] = 128;
	fV[141].ind[2] = 144;
	fV[142].ind[0] = 120;
	fV[142].ind[1] = 121;
	fV[142].ind[2] = 137;
	fV[143].ind[0] = 128;
	fV[143].ind[1] = 129;
	fV[143].ind[2] = 145;
	fV[144].ind[0] = 141;
	fV[144].ind[1] = 142;
	fV[144].ind[2] = 157;
	fV[145].ind[0] = 134;
	fV[145].ind[1] = 135;
	fV[145].ind[2] = 150;
	fV[146].ind[0] = 143;
	fV[146].ind[1] = 158;
	fV[146].ind[2] = 157;
	fV[147].ind[0] = 135;
	fV[147].ind[1] = 136;
	fV[147].ind[2] = 151;
	fV[148].ind[0] = 143;
	fV[148].ind[1] = 144;
	fV[148].ind[2] = 159;
	fV[149].ind[0] = 136;
	fV[149].ind[1] = 137;
	fV[149].ind[2] = 152;
	fV[150].ind[0] = 144;
	fV[150].ind[1] = 145;
	fV[150].ind[2] = 160;
	fV[151].ind[0] = 138;
	fV[151].ind[1] = 153;
	fV[151].ind[2] = 152;
	fV[152].ind[0] = 146;
	fV[152].ind[1] = 161;
	fV[152].ind[2] = 160;
	fV[153].ind[0] = 138;
	fV[153].ind[1] = 139;
	fV[153].ind[2] = 154;
	fV[154].ind[0] = 147;
	fV[154].ind[1] = 162;
	fV[154].ind[2] = 161;
	fV[155].ind[0] = 139;
	fV[155].ind[1] = 140;
	fV[155].ind[2] = 155;
	fV[156].ind[0] = 147;
	fV[156].ind[1] = 148;
	fV[156].ind[2] = 163;
	fV[157].ind[0] = 141;
	fV[157].ind[1] = 156;
	fV[157].ind[2] = 155;
	fV[158].ind[0] = 134;
	fV[158].ind[1] = 149;
	fV[158].ind[2] = 164;
	fV[159].ind[0] = 133;
	fV[159].ind[1] = 163;
	fV[159].ind[2] = 148;
	fV[160].ind[0] = 161;
	fV[160].ind[1] = 177;
	fV[160].ind[2] = 176;
	fV[161].ind[0] = 153;
	fV[161].ind[1] = 154;
	fV[161].ind[2] = 170;
	fV[162].ind[0] = 162;
	fV[162].ind[1] = 178;
	fV[162].ind[2] = 177;
	fV[163].ind[0] = 154;
	fV[163].ind[1] = 155;
	fV[163].ind[2] = 171;
	fV[164].ind[0] = 162;
	fV[164].ind[1] = 163;
	fV[164].ind[2] = 179;
	fV[165].ind[0] = 156;
	fV[165].ind[1] = 172;
	fV[165].ind[2] = 171;
	fV[166].ind[0] = 149;
	fV[166].ind[1] = 165;
	fV[166].ind[2] = 164;
	fV[167].ind[0] = 133;
	fV[167].ind[1] = 179;
	fV[167].ind[2] = 163;
	fV[168].ind[0] = 156;
	fV[168].ind[1] = 157;
	fV[168].ind[2] = 173;
	fV[169].ind[0] = 149;
	fV[169].ind[1] = 150;
	fV[169].ind[2] = 166;
	fV[170].ind[0] = 158;
	fV[170].ind[1] = 174;
	fV[170].ind[2] = 173;
	fV[171].ind[0] = 151;
	fV[171].ind[1] = 167;
	fV[171].ind[2] = 166;
	fV[172].ind[0] = 159;
	fV[172].ind[1] = 175;
	fV[172].ind[2] = 174;
	fV[173].ind[0] = 151;
	fV[173].ind[1] = 152;
	fV[173].ind[2] = 168;
	fV[174].ind[0] = 159;
	fV[174].ind[1] = 160;
	fV[174].ind[2] = 176;
	fV[175].ind[0] = 153;
	fV[175].ind[1] = 169;
	fV[175].ind[2] = 168;
	fV[176].ind[0] = 174;
	fV[176].ind[1] = 189;
	fV[176].ind[2] = 188;
	fV[177].ind[0] = 166;
	fV[177].ind[1] = 167;
	fV[177].ind[2] = 182;
	fV[178].ind[0] = 175;
	fV[178].ind[1] = 190;
	fV[178].ind[2] = 189;
	fV[179].ind[0] = 167;
	fV[179].ind[1] = 168;
	fV[179].ind[2] = 183;
	fV[180].ind[0] = 175;
	fV[180].ind[1] = 176;
	fV[180].ind[2] = 191;
	fV[181].ind[0] = 169;
	fV[181].ind[1] = 184;
	fV[181].ind[2] = 183;
	fV[182].ind[0] = 177;
	fV[182].ind[1] = 192;
	fV[182].ind[2] = 191;
	fV[183].ind[0] = 169;
	fV[183].ind[1] = 170;
	fV[183].ind[2] = 185;
	fV[184].ind[0] = 178;
	fV[184].ind[1] = 193;
	fV[184].ind[2] = 192;
	fV[185].ind[0] = 170;
	fV[185].ind[1] = 171;
	fV[185].ind[2] = 186;
	fV[186].ind[0] = 178;
	fV[186].ind[1] = 179;
	fV[186].ind[2] = 194;
	fV[187].ind[0] = 172;
	fV[187].ind[1] = 187;
	fV[187].ind[2] = 186;
	fV[188].ind[0] = 165;
	fV[188].ind[1] = 180;
	fV[188].ind[2] = 164;
	fV[189].ind[0] = 133;
	fV[189].ind[1] = 194;
	fV[189].ind[2] = 179;
	fV[190].ind[0] = 172;
	fV[190].ind[1] = 173;
	fV[190].ind[2] = 188;
	fV[191].ind[0] = 165;
	fV[191].ind[1] = 166;
	fV[191].ind[2] = 181;
	fV[192].ind[0] = 193;
	fV[192].ind[1] = 208;
	fV[192].ind[2] = 207;
	fV[193].ind[0] = 185;
	fV[193].ind[1] = 186;
	fV[193].ind[2] = 201;
	fV[194].ind[0] = 193;
	fV[194].ind[1] = 194;
	fV[194].ind[2] = 209;
	fV[195].ind[0] = 187;
	fV[195].ind[1] = 202;
	fV[195].ind[2] = 201;
	fV[196].ind[0] = 180;
	fV[196].ind[1] = 195;
	fV[196].ind[2] = 164;
	fV[197].ind[0] = 133;
	fV[197].ind[1] = 209;
	fV[197].ind[2] = 194;
	fV[198].ind[0] = 187;
	fV[198].ind[1] = 188;
	fV[198].ind[2] = 203;
	fV[199].ind[0] = 180;
	fV[199].ind[1] = 181;
	fV[199].ind[2] = 196;
	fV[200].ind[0] = 189;
	fV[200].ind[1] = 204;
	fV[200].ind[2] = 203;
	fV[201].ind[0] = 182;
	fV[201].ind[1] = 197;
	fV[201].ind[2] = 196;
	fV[202].ind[0] = 189;
	fV[202].ind[1] = 190;
	fV[202].ind[2] = 205;
	fV[203].ind[0] = 182;
	fV[203].ind[1] = 183;
	fV[203].ind[2] = 198;
	fV[204].ind[0] = 190;
	fV[204].ind[1] = 191;
	fV[204].ind[2] = 206;
	fV[205].ind[0] = 184;
	fV[205].ind[1] = 199;
	fV[205].ind[2] = 198;
	fV[206].ind[0] = 192;
	fV[206].ind[1] = 207;
	fV[206].ind[2] = 206;
	fV[207].ind[0] = 184;
	fV[207].ind[1] = 185;
	fV[207].ind[2] = 200;
	fV[208].ind[0] = 196;
	fV[208].ind[1] = 197;
	fV[208].ind[2] = 212;
	fV[209].ind[0] = 205;
	fV[209].ind[1] = 220;
	fV[209].ind[2] = 219;
	fV[210].ind[0] = 197;
	fV[210].ind[1] = 198;
	fV[210].ind[2] = 213;
	fV[211].ind[0] = 205;
	fV[211].ind[1] = 206;
	fV[211].ind[2] = 221;
	fV[212].ind[0] = 199;
	fV[212].ind[1] = 214;
	fV[212].ind[2] = 213;
	fV[213].ind[0] = 207;
	fV[213].ind[1] = 222;
	fV[213].ind[2] = 221;
	fV[214].ind[0] = 199;
	fV[214].ind[1] = 200;
	fV[214].ind[2] = 215;
	fV[215].ind[0] = 208;
	fV[215].ind[1] = 223;
	fV[215].ind[2] = 222;
	fV[216].ind[0] = 200;
	fV[216].ind[1] = 201;
	fV[216].ind[2] = 216;
	fV[217].ind[0] = 208;
	fV[217].ind[1] = 209;
	fV[217].ind[2] = 224;
	fV[218].ind[0] = 202;
	fV[218].ind[1] = 217;
	fV[218].ind[2] = 216;
	fV[219].ind[0] = 195;
	fV[219].ind[1] = 210;
	fV[219].ind[2] = 164;
	fV[220].ind[0] = 133;
	fV[220].ind[1] = 224;
	fV[220].ind[2] = 209;
	fV[221].ind[0] = 202;
	fV[221].ind[1] = 203;
	fV[221].ind[2] = 218;
	fV[222].ind[0] = 195;
	fV[222].ind[1] = 196;
	fV[222].ind[2] = 211;
	fV[223].ind[0] = 204;
	fV[223].ind[1] = 219;
	fV[223].ind[2] = 218;
	fV[224].ind[0] = 215;
	fV[224].ind[1] = 216;
	fV[224].ind[2] = 231;
	fV[225].ind[0] = 223;
	fV[225].ind[1] = 224;
	fV[225].ind[2] = 239;
	fV[226].ind[0] = 217;
	fV[226].ind[1] = 232;
	fV[226].ind[2] = 231;
	fV[227].ind[0] = 210;
	fV[227].ind[1] = 225;
	fV[227].ind[2] = 164;
	fV[228].ind[0] = 133;
	fV[228].ind[1] = 239;
	fV[228].ind[2] = 224;
	fV[229].ind[0] = 217;
	fV[229].ind[1] = 218;
	fV[229].ind[2] = 233;
	fV[230].ind[0] = 210;
	fV[230].ind[1] = 211;
	fV[230].ind[2] = 226;
	fV[231].ind[0] = 219;
	fV[231].ind[1] = 234;
	fV[231].ind[2] = 233;
	fV[232].ind[0] = 211;
	fV[232].ind[1] = 212;
	fV[232].ind[2] = 227;
	fV[233].ind[0] = 220;
	fV[233].ind[1] = 235;
	fV[233].ind[2] = 234;
	fV[234].ind[0] = 212;
	fV[234].ind[1] = 213;
	fV[234].ind[2] = 228;
	fV[235].ind[0] = 220;
	fV[235].ind[1] = 221;
	fV[235].ind[2] = 236;
	fV[236].ind[0] = 214;
	fV[236].ind[1] = 229;
	fV[236].ind[2] = 228;
	fV[237].ind[0] = 222;
	fV[237].ind[1] = 237;
	fV[237].ind[2] = 236;
	fV[238].ind[0] = 214;
	fV[238].ind[1] = 215;
	fV[238].ind[2] = 230;
	fV[239].ind[0] = 222;
	fV[239].ind[1] = 223;
	fV[239].ind[2] = 238;
	fV[240].ind[0] = 234;
	fV[240].ind[1] = 235;
	fV[240].ind[2] = 8;
	fV[241].ind[0] = 227;
	fV[241].ind[1] = 228;
	fV[241].ind[2] = 1;
	fV[242].ind[0] = 235;
	fV[242].ind[1] = 236;
	fV[242].ind[2] = 9;
	fV[243].ind[0] = 229;
	fV[243].ind[1] = 2;
	fV[243].ind[2] = 1;
	fV[244].ind[0] = 236;
	fV[244].ind[1] = 237;
	fV[244].ind[2] = 10;
	fV[245].ind[0] = 229;
	fV[245].ind[1] = 230;
	fV[245].ind[2] = 3;
	fV[246].ind[0] = 237;
	fV[246].ind[1] = 238;
	fV[246].ind[2] = 11;
	fV[247].ind[0] = 230;
	fV[247].ind[1] = 231;
	fV[247].ind[2] = 4;
	fV[248].ind[0] = 238;
	fV[248].ind[1] = 239;
	fV[248].ind[2] = 12;
	fV[249].ind[0] = 232;
	fV[249].ind[1] = 5;
	fV[249].ind[2] = 4;
	fV[250].ind[0] = 225;
	fV[250].ind[1] = 0;
	fV[250].ind[2] = 164;
	fV[251].ind[0] = 133;
	fV[251].ind[1] = 12;
	fV[251].ind[2] = 239;
	fV[252].ind[0] = 232;
	fV[252].ind[1] = 233;
	fV[252].ind[2] = 6;
	fV[253].ind[0] = 226;
	fV[253].ind[1] = 240;
	fV[253].ind[2] = 0;
	fV[254].ind[0] = 233;
	fV[254].ind[1] = 234;
	fV[254].ind[2] = 7;
	fV[255].ind[0] = 227;
	fV[255].ind[1] = 241;
	fV[255].ind[2] = 240;
	fV[256].ind[0] = 4;
	fV[256].ind[1] = 20;
	fV[256].ind[2] = 19;
	fV[257].ind[0] = 5;
	fV[257].ind[1] = 21;
	fV[257].ind[2] = 20;
	fV[258].ind[0] = 240;
	fV[258].ind[1] = 13;
	fV[258].ind[2] = 0;
	fV[259].ind[0] = 6;
	fV[259].ind[1] = 22;
	fV[259].ind[2] = 21;
	fV[260].ind[0] = 241;
	fV[260].ind[1] = 14;
	fV[260].ind[2] = 240;
	fV[261].ind[0] = 7;
	fV[261].ind[1] = 23;
	fV[261].ind[2] = 22;
	fV[262].ind[0] = 241;
	fV[262].ind[1] = 16;
	fV[262].ind[2] = 15;
	fV[263].ind[0] = 8;
	fV[263].ind[1] = 24;
	fV[263].ind[2] = 23;
	fV[264].ind[0] = 1;
	fV[264].ind[1] = 17;
	fV[264].ind[2] = 16;
	fV[265].ind[0] = 9;
	fV[265].ind[1] = 25;
	fV[265].ind[2] = 24;
	fV[266].ind[0] = 2;
	fV[266].ind[1] = 18;
	fV[266].ind[2] = 17;
	fV[267].ind[0] = 11;
	fV[267].ind[1] = 25;
	fV[267].ind[2] = 10;
	fV[268].ind[0] = 3;
	fV[268].ind[1] = 19;
	fV[268].ind[2] = 18;
	fV[269].ind[0] = 12;
	fV[269].ind[1] = 26;
	fV[269].ind[2] = 11;
	fV[270].ind[0] = 25;
	fV[270].ind[1] = 41;
	fV[270].ind[2] = 40;
	fV[271].ind[0] = 18;
	fV[271].ind[1] = 34;
	fV[271].ind[2] = 33;
	fV[272].ind[0] = 26;
	fV[272].ind[1] = 42;
	fV[272].ind[2] = 41;
	fV[273].ind[0] = 19;
	fV[273].ind[1] = 35;
	fV[273].ind[2] = 34;
	fV[274].ind[0] = 20;
	fV[274].ind[1] = 36;
	fV[274].ind[2] = 35;
	fV[275].ind[0] = 13;
	fV[275].ind[1] = 29;
	fV[275].ind[2] = 28;
	fV[276].ind[0] = 22;
	fV[276].ind[1] = 36;
	fV[276].ind[2] = 21;
	fV[277].ind[0] = 14;
	fV[277].ind[1] = 30;
	fV[277].ind[2] = 29;
	fV[278].ind[0] = 22;
	fV[278].ind[1] = 38;
	fV[278].ind[2] = 37;
	fV[279].ind[0] = 15;
	fV[279].ind[1] = 31;
	fV[279].ind[2] = 30;
	fV[280].ind[0] = 23;
	fV[280].ind[1] = 39;
	fV[280].ind[2] = 38;
	fV[281].ind[0] = 16;
	fV[281].ind[1] = 32;
	fV[281].ind[2] = 31;
	fV[282].ind[0] = 24;
	fV[282].ind[1] = 40;
	fV[282].ind[2] = 39;
	fV[283].ind[0] = 17;
	fV[283].ind[1] = 33;
	fV[283].ind[2] = 32;
	fV[284].ind[0] = 37;
	fV[284].ind[1] = 53;
	fV[284].ind[2] = 52;
	fV[285].ind[0] = 30;
	fV[285].ind[1] = 46;
	fV[285].ind[2] = 45;
	fV[286].ind[0] = 39;
	fV[286].ind[1] = 53;
	fV[286].ind[2] = 38;
	fV[287].ind[0] = 31;
	fV[287].ind[1] = 47;
	fV[287].ind[2] = 46;
	fV[288].ind[0] = 40;
	fV[288].ind[1] = 54;
	fV[288].ind[2] = 39;
	fV[289].ind[0] = 33;
	fV[289].ind[1] = 47;
	fV[289].ind[2] = 32;
	fV[290].ind[0] = 41;
	fV[290].ind[1] = 55;
	fV[290].ind[2] = 40;
	fV[291].ind[0] = 33;
	fV[291].ind[1] = 49;
	fV[291].ind[2] = 48;
	fV[292].ind[0] = 41;
	fV[292].ind[1] = 57;
	fV[292].ind[2] = 56;
	fV[293].ind[0] = 34;
	fV[293].ind[1] = 50;
	fV[293].ind[2] = 49;
	fV[294].ind[0] = 35;
	fV[294].ind[1] = 51;
	fV[294].ind[2] = 50;
	fV[295].ind[0] = 28;
	fV[295].ind[1] = 44;
	fV[295].ind[2] = 43;
	fV[296].ind[0] = 36;
	fV[296].ind[1] = 52;
	fV[296].ind[2] = 51;
	fV[297].ind[0] = 29;
	fV[297].ind[1] = 45;
	fV[297].ind[2] = 44;
	fV[298].ind[0] = 56;
	fV[298].ind[1] = 72;
	fV[298].ind[2] = 71;
	fV[299].ind[0] = 50;
	fV[299].ind[1] = 64;
	fV[299].ind[2] = 49;
	fV[300].ind[0] = 50;
	fV[300].ind[1] = 66;
	fV[300].ind[2] = 65;
	fV[301].ind[0] = 43;
	fV[301].ind[1] = 59;
	fV[301].ind[2] = 58;
	fV[302].ind[0] = 52;
	fV[302].ind[1] = 66;
	fV[302].ind[2] = 51;
	fV[303].ind[0] = 44;
	fV[303].ind[1] = 60;
	fV[303].ind[2] = 59;
	fV[304].ind[0] = 52;
	fV[304].ind[1] = 68;
	fV[304].ind[2] = 67;
	fV[305].ind[0] = 45;
	fV[305].ind[1] = 61;
	fV[305].ind[2] = 60;
	fV[306].ind[0] = 54;
	fV[306].ind[1] = 68;
	fV[306].ind[2] = 53;
	fV[307].ind[0] = 46;
	fV[307].ind[1] = 62;
	fV[307].ind[2] = 61;
	fV[308].ind[0] = 54;
	fV[308].ind[1] = 70;
	fV[308].ind[2] = 69;
	fV[309].ind[0] = 48;
	fV[309].ind[1] = 62;
	fV[309].ind[2] = 47;
	fV[310].ind[0] = 56;
	fV[310].ind[1] = 70;
	fV[310].ind[2] = 55;
	fV[311].ind[0] = 48;
	fV[311].ind[1] = 64;
	fV[311].ind[2] = 63;
	fV[312].ind[0] = 60;
	fV[312].ind[1] = 76;
	fV[312].ind[2] = 75;
	fV[313].ind[0] = 68;
	fV[313].ind[1] = 84;
	fV[313].ind[2] = 83;
	fV[314].ind[0] = 61;
	fV[314].ind[1] = 77;
	fV[314].ind[2] = 76;
	fV[315].ind[0] = 69;
	fV[315].ind[1] = 85;
	fV[315].ind[2] = 84;
	fV[316].ind[0] = 62;
	fV[316].ind[1] = 78;
	fV[316].ind[2] = 77;
	fV[317].ind[0] = 70;
	fV[317].ind[1] = 86;
	fV[317].ind[2] = 85;
	fV[318].ind[0] = 63;
	fV[318].ind[1] = 79;
	fV[318].ind[2] = 78;
	fV[319].ind[0] = 71;
	fV[319].ind[1] = 87;
	fV[319].ind[2] = 86;
	fV[320].ind[0] = 65;
	fV[320].ind[1] = 79;
	fV[320].ind[2] = 64;
	fV[321].ind[0] = 65;
	fV[321].ind[1] = 81;
	fV[321].ind[2] = 80;
	fV[322].ind[0] = 59;
	fV[322].ind[1] = 73;
	fV[322].ind[2] = 58;
	fV[323].ind[0] = 67;
	fV[323].ind[1] = 81;
	fV[323].ind[2] = 66;
	fV[324].ind[0] = 59;
	fV[324].ind[1] = 75;
	fV[324].ind[2] = 74;
	fV[325].ind[0] = 67;
	fV[325].ind[1] = 83;
	fV[325].ind[2] = 82;
	fV[326].ind[0] = 80;
	fV[326].ind[1] = 94;
	fV[326].ind[2] = 79;
	fV[327].ind[0] = 80;
	fV[327].ind[1] = 96;
	fV[327].ind[2] = 95;
	fV[328].ind[0] = 73;
	fV[328].ind[1] = 89;
	fV[328].ind[2] = 88;
	fV[329].ind[0] = 82;
	fV[329].ind[1] = 96;
	fV[329].ind[2] = 81;
	fV[330].ind[0] = 74;
	fV[330].ind[1] = 90;
	fV[330].ind[2] = 89;
	fV[331].ind[0] = 83;
	fV[331].ind[1] = 97;
	fV[331].ind[2] = 82;
	fV[332].ind[0] = 75;
	fV[332].ind[1] = 91;
	fV[332].ind[2] = 90;
	fV[333].ind[0] = 83;
	fV[333].ind[1] = 99;
	fV[333].ind[2] = 98;
	fV[334].ind[0] = 76;
	fV[334].ind[1] = 92;
	fV[334].ind[2] = 91;
	fV[335].ind[0] = 85;
	fV[335].ind[1] = 99;
	fV[335].ind[2] = 84;
	fV[336].ind[0] = 77;
	fV[336].ind[1] = 93;
	fV[336].ind[2] = 92;
	fV[337].ind[0] = 86;
	fV[337].ind[1] = 100;
	fV[337].ind[2] = 85;
	fV[338].ind[0] = 78;
	fV[338].ind[1] = 94;
	fV[338].ind[2] = 93;
	fV[339].ind[0] = 86;
	fV[339].ind[1] = 102;
	fV[339].ind[2] = 101;
	fV[340].ind[0] = 98;
	fV[340].ind[1] = 114;
	fV[340].ind[2] = 113;
	fV[341].ind[0] = 92;
	fV[341].ind[1] = 106;
	fV[341].ind[2] = 91;
	fV[342].ind[0] = 100;
	fV[342].ind[1] = 114;
	fV[342].ind[2] = 99;
	fV[343].ind[0] = 92;
	fV[343].ind[1] = 108;
	fV[343].ind[2] = 107;
	fV[344].ind[0] = 101;
	fV[344].ind[1] = 115;
	fV[344].ind[2] = 100;
	fV[345].ind[0] = 93;
	fV[345].ind[1] = 109;
	fV[345].ind[2] = 108;
	fV[346].ind[0] = 101;
	fV[346].ind[1] = 117;
	fV[346].ind[2] = 116;
	fV[347].ind[0] = 95;
	fV[347].ind[1] = 109;
	fV[347].ind[2] = 94;
	fV[348].ind[0] = 95;
	fV[348].ind[1] = 111;
	fV[348].ind[2] = 110;
	fV[349].ind[0] = 88;
	fV[349].ind[1] = 104;
	fV[349].ind[2] = 103;
	fV[350].ind[0] = 97;
	fV[350].ind[1] = 111;
	fV[350].ind[2] = 96;
	fV[351].ind[0] = 89;
	fV[351].ind[1] = 105;
	fV[351].ind[2] = 104;
	fV[352].ind[0] = 97;
	fV[352].ind[1] = 113;
	fV[352].ind[2] = 112;
	fV[353].ind[0] = 90;
	fV[353].ind[1] = 106;
	fV[353].ind[2] = 105;
	fV[354].ind[0] = 110;
	fV[354].ind[1] = 126;
	fV[354].ind[2] = 125;
	fV[355].ind[0] = 103;
	fV[355].ind[1] = 119;
	fV[355].ind[2] = 118;
	fV[356].ind[0] = 112;
	fV[356].ind[1] = 126;
	fV[356].ind[2] = 111;
	fV[357].ind[0] = 104;
	fV[357].ind[1] = 120;
	fV[357].ind[2] = 119;
	fV[358].ind[0] = 112;
	fV[358].ind[1] = 128;
	fV[358].ind[2] = 127;
	fV[359].ind[0] = 105;
	fV[359].ind[1] = 121;
	fV[359].ind[2] = 120;
	fV[360].ind[0] = 113;
	fV[360].ind[1] = 129;
	fV[360].ind[2] = 128;
	fV[361].ind[0] = 107;
	fV[361].ind[1] = 121;
	fV[361].ind[2] = 106;
	fV[362].ind[0] = 115;
	fV[362].ind[1] = 129;
	fV[362].ind[2] = 114;
	fV[363].ind[0] = 107;
	fV[363].ind[1] = 123;
	fV[363].ind[2] = 122;
	fV[364].ind[0] = 116;
	fV[364].ind[1] = 130;
	fV[364].ind[2] = 115;
	fV[365].ind[0] = 108;
	fV[365].ind[1] = 124;
	fV[365].ind[2] = 123;
	fV[366].ind[0] = 116;
	fV[366].ind[1] = 132;
	fV[366].ind[2] = 131;
	fV[367].ind[0] = 110;
	fV[367].ind[1] = 124;
	fV[367].ind[2] = 109;
	fV[368].ind[0] = 122;
	fV[368].ind[1] = 137;
	fV[368].ind[2] = 121;
	fV[369].ind[0] = 130;
	fV[369].ind[1] = 145;
	fV[369].ind[2] = 129;
	fV[370].ind[0] = 122;
	fV[370].ind[1] = 139;
	fV[370].ind[2] = 138;
	fV[371].ind[0] = 131;
	fV[371].ind[1] = 146;
	fV[371].ind[2] = 130;
	fV[372].ind[0] = 123;
	fV[372].ind[1] = 140;
	fV[372].ind[2] = 139;
	fV[373].ind[0] = 131;
	fV[373].ind[1] = 148;
	fV[373].ind[2] = 147;
	fV[374].ind[0] = 125;
	fV[374].ind[1] = 140;
	fV[374].ind[2] = 124;
	fV[375].ind[0] = 125;
	fV[375].ind[1] = 142;
	fV[375].ind[2] = 141;
	fV[376].ind[0] = 118;
	fV[376].ind[1] = 135;
	fV[376].ind[2] = 134;
	fV[377].ind[0] = 127;
	fV[377].ind[1] = 142;
	fV[377].ind[2] = 126;
	fV[378].ind[0] = 119;
	fV[378].ind[1] = 136;
	fV[378].ind[2] = 135;
	fV[379].ind[0] = 127;
	fV[379].ind[1] = 144;
	fV[379].ind[2] = 143;
	fV[380].ind[0] = 120;
	fV[380].ind[1] = 137;
	fV[380].ind[2] = 136;
	fV[381].ind[0] = 128;
	fV[381].ind[1] = 145;
	fV[381].ind[2] = 144;
	fV[382].ind[0] = 141;
	fV[382].ind[1] = 157;
	fV[382].ind[2] = 156;
	fV[383].ind[0] = 134;
	fV[383].ind[1] = 150;
	fV[383].ind[2] = 149;
	fV[384].ind[0] = 143;
	fV[384].ind[1] = 157;
	fV[384].ind[2] = 142;
	fV[385].ind[0] = 135;
	fV[385].ind[1] = 151;
	fV[385].ind[2] = 150;
	fV[386].ind[0] = 143;
	fV[386].ind[1] = 159;
	fV[386].ind[2] = 158;
	fV[387].ind[0] = 136;
	fV[387].ind[1] = 152;
	fV[387].ind[2] = 151;
	fV[388].ind[0] = 144;
	fV[388].ind[1] = 160;
	fV[388].ind[2] = 159;
	fV[389].ind[0] = 138;
	fV[389].ind[1] = 152;
	fV[389].ind[2] = 137;
	fV[390].ind[0] = 146;
	fV[390].ind[1] = 160;
	fV[390].ind[2] = 145;
	fV[391].ind[0] = 138;
	fV[391].ind[1] = 154;
	fV[391].ind[2] = 153;
	fV[392].ind[0] = 147;
	fV[392].ind[1] = 161;
	fV[392].ind[2] = 146;
	fV[393].ind[0] = 139;
	fV[393].ind[1] = 155;
	fV[393].ind[2] = 154;
	fV[394].ind[0] = 147;
	fV[394].ind[1] = 163;
	fV[394].ind[2] = 162;
	fV[395].ind[0] = 141;
	fV[395].ind[1] = 155;
	fV[395].ind[2] = 140;
	fV[396].ind[0] = 161;
	fV[396].ind[1] = 176;
	fV[396].ind[2] = 160;
	fV[397].ind[0] = 153;
	fV[397].ind[1] = 170;
	fV[397].ind[2] = 169;
	fV[398].ind[0] = 162;
	fV[398].ind[1] = 177;
	fV[398].ind[2] = 161;
	fV[399].ind[0] = 154;
	fV[399].ind[1] = 171;
	fV[399].ind[2] = 170;
	fV[400].ind[0] = 162;
	fV[400].ind[1] = 179;
	fV[400].ind[2] = 178;
	fV[401].ind[0] = 156;
	fV[401].ind[1] = 171;
	fV[401].ind[2] = 155;
	fV[402].ind[0] = 156;
	fV[402].ind[1] = 173;
	fV[402].ind[2] = 172;
	fV[403].ind[0] = 149;
	fV[403].ind[1] = 166;
	fV[403].ind[2] = 165;
	fV[404].ind[0] = 158;
	fV[404].ind[1] = 173;
	fV[404].ind[2] = 157;
	fV[405].ind[0] = 151;
	fV[405].ind[1] = 166;
	fV[405].ind[2] = 150;
	fV[406].ind[0] = 159;
	fV[406].ind[1] = 174;
	fV[406].ind[2] = 158;
	fV[407].ind[0] = 151;
	fV[407].ind[1] = 168;
	fV[407].ind[2] = 167;
	fV[408].ind[0] = 159;
	fV[408].ind[1] = 176;
	fV[408].ind[2] = 175;
	fV[409].ind[0] = 153;
	fV[409].ind[1] = 168;
	fV[409].ind[2] = 152;
	fV[410].ind[0] = 174;
	fV[410].ind[1] = 188;
	fV[410].ind[2] = 173;
	fV[411].ind[0] = 166;
	fV[411].ind[1] = 182;
	fV[411].ind[2] = 181;
	fV[412].ind[0] = 175;
	fV[412].ind[1] = 189;
	fV[412].ind[2] = 174;
	fV[413].ind[0] = 167;
	fV[413].ind[1] = 183;
	fV[413].ind[2] = 182;
	fV[414].ind[0] = 175;
	fV[414].ind[1] = 191;
	fV[414].ind[2] = 190;
	fV[415].ind[0] = 169;
	fV[415].ind[1] = 183;
	fV[415].ind[2] = 168;
	fV[416].ind[0] = 177;
	fV[416].ind[1] = 191;
	fV[416].ind[2] = 176;
	fV[417].ind[0] = 169;
	fV[417].ind[1] = 185;
	fV[417].ind[2] = 184;
	fV[418].ind[0] = 178;
	fV[418].ind[1] = 192;
	fV[418].ind[2] = 177;
	fV[419].ind[0] = 170;
	fV[419].ind[1] = 186;
	fV[419].ind[2] = 185;
	fV[420].ind[0] = 178;
	fV[420].ind[1] = 194;
	fV[420].ind[2] = 193;
	fV[421].ind[0] = 172;
	fV[421].ind[1] = 186;
	fV[421].ind[2] = 171;
	fV[422].ind[0] = 172;
	fV[422].ind[1] = 188;
	fV[422].ind[2] = 187;
	fV[423].ind[0] = 165;
	fV[423].ind[1] = 181;
	fV[423].ind[2] = 180;
	fV[424].ind[0] = 193;
	fV[424].ind[1] = 207;
	fV[424].ind[2] = 192;
	fV[425].ind[0] = 185;
	fV[425].ind[1] = 201;
	fV[425].ind[2] = 200;
	fV[426].ind[0] = 193;
	fV[426].ind[1] = 209;
	fV[426].ind[2] = 208;
	fV[427].ind[0] = 187;
	fV[427].ind[1] = 201;
	fV[427].ind[2] = 186;
	fV[428].ind[0] = 187;
	fV[428].ind[1] = 203;
	fV[428].ind[2] = 202;
	fV[429].ind[0] = 180;
	fV[429].ind[1] = 196;
	fV[429].ind[2] = 195;
	fV[430].ind[0] = 189;
	fV[430].ind[1] = 203;
	fV[430].ind[2] = 188;
	fV[431].ind[0] = 182;
	fV[431].ind[1] = 196;
	fV[431].ind[2] = 181;
	fV[432].ind[0] = 189;
	fV[432].ind[1] = 205;
	fV[432].ind[2] = 204;
	fV[433].ind[0] = 182;
	fV[433].ind[1] = 198;
	fV[433].ind[2] = 197;
	fV[434].ind[0] = 190;
	fV[434].ind[1] = 206;
	fV[434].ind[2] = 205;
	fV[435].ind[0] = 184;
	fV[435].ind[1] = 198;
	fV[435].ind[2] = 183;
	fV[436].ind[0] = 192;
	fV[436].ind[1] = 206;
	fV[436].ind[2] = 191;
	fV[437].ind[0] = 184;
	fV[437].ind[1] = 200;
	fV[437].ind[2] = 199;
	fV[438].ind[0] = 196;
	fV[438].ind[1] = 212;
	fV[438].ind[2] = 211;
	fV[439].ind[0] = 205;
	fV[439].ind[1] = 219;
	fV[439].ind[2] = 204;
	fV[440].ind[0] = 197;
	fV[440].ind[1] = 213;
	fV[440].ind[2] = 212;
	fV[441].ind[0] = 205;
	fV[441].ind[1] = 221;
	fV[441].ind[2] = 220;
	fV[442].ind[0] = 199;
	fV[442].ind[1] = 213;
	fV[442].ind[2] = 198;
	fV[443].ind[0] = 207;
	fV[443].ind[1] = 221;
	fV[443].ind[2] = 206;
	fV[444].ind[0] = 199;
	fV[444].ind[1] = 215;
	fV[444].ind[2] = 214;
	fV[445].ind[0] = 208;
	fV[445].ind[1] = 222;
	fV[445].ind[2] = 207;
	fV[446].ind[0] = 200;
	fV[446].ind[1] = 216;
	fV[446].ind[2] = 215;
	fV[447].ind[0] = 208;
	fV[447].ind[1] = 224;
	fV[447].ind[2] = 223;
	fV[448].ind[0] = 202;
	fV[448].ind[1] = 216;
	fV[448].ind[2] = 201;
	fV[449].ind[0] = 202;
	fV[449].ind[1] = 218;
	fV[449].ind[2] = 217;
	fV[450].ind[0] = 195;
	fV[450].ind[1] = 211;
	fV[450].ind[2] = 210;
	fV[451].ind[0] = 204;
	fV[451].ind[1] = 218;
	fV[451].ind[2] = 203;
	fV[452].ind[0] = 215;
	fV[452].ind[1] = 231;
	fV[452].ind[2] = 230;
	fV[453].ind[0] = 223;
	fV[453].ind[1] = 239;
	fV[453].ind[2] = 238;
	fV[454].ind[0] = 217;
	fV[454].ind[1] = 231;
	fV[454].ind[2] = 216;
	fV[455].ind[0] = 217;
	fV[455].ind[1] = 233;
	fV[455].ind[2] = 232;
	fV[456].ind[0] = 210;
	fV[456].ind[1] = 226;
	fV[456].ind[2] = 225;
	fV[457].ind[0] = 219;
	fV[457].ind[1] = 233;
	fV[457].ind[2] = 218;
	fV[458].ind[0] = 211;
	fV[458].ind[1] = 227;
	fV[458].ind[2] = 226;
	fV[459].ind[0] = 220;
	fV[459].ind[1] = 234;
	fV[459].ind[2] = 219;
	fV[460].ind[0] = 212;
	fV[460].ind[1] = 228;
	fV[460].ind[2] = 227;
	fV[461].ind[0] = 220;
	fV[461].ind[1] = 236;
	fV[461].ind[2] = 235;
	fV[462].ind[0] = 214;
	fV[462].ind[1] = 228;
	fV[462].ind[2] = 213;
	fV[463].ind[0] = 222;
	fV[463].ind[1] = 236;
	fV[463].ind[2] = 221;
	fV[464].ind[0] = 214;
	fV[464].ind[1] = 230;
	fV[464].ind[2] = 229;
	fV[465].ind[0] = 222;
	fV[465].ind[1] = 238;
	fV[465].ind[2] = 237;
	fV[466].ind[0] = 234;
	fV[466].ind[1] = 8;
	fV[466].ind[2] = 7;
	fV[467].ind[0] = 227;
	fV[467].ind[1] = 1;
	fV[467].ind[2] = 241;
	fV[468].ind[0] = 235;
	fV[468].ind[1] = 9;
	fV[468].ind[2] = 8;
	fV[469].ind[0] = 229;
	fV[469].ind[1] = 1;
	fV[469].ind[2] = 228;
	fV[470].ind[0] = 236;
	fV[470].ind[1] = 10;
	fV[470].ind[2] = 9;
	fV[471].ind[0] = 229;
	fV[471].ind[1] = 3;
	fV[471].ind[2] = 2;
	fV[472].ind[0] = 237;
	fV[472].ind[1] = 11;
	fV[472].ind[2] = 10;
	fV[473].ind[0] = 230;
	fV[473].ind[1] = 4;
	fV[473].ind[2] = 3;
	fV[474].ind[0] = 238;
	fV[474].ind[1] = 12;
	fV[474].ind[2] = 11;
	fV[475].ind[0] = 232;
	fV[475].ind[1] = 4;
	fV[475].ind[2] = 231;
	fV[476].ind[0] = 232;
	fV[476].ind[1] = 6;
	fV[476].ind[2] = 5;
	fV[477].ind[0] = 226;
	fV[477].ind[1] = 0;
	fV[477].ind[2] = 225;
	fV[478].ind[0] = 233;
	fV[478].ind[1] = 7;
	fV[478].ind[2] = 6;
	fV[479].ind[0] = 227;
	fV[479].ind[1] = 240;
	fV[479].ind[2] = 226;

	for (int i = 0; i < sphere.faceCount; ++i)
	{
		sphere.faceVerts[i].ind[0] = fV[i].ind[0];
		sphere.faceVerts[i].ind[1] = fV[i].ind[1];
		sphere.faceVerts[i].ind[2] = fV[i].ind[2];
		vec3 A = sphere.vertices[fV[i].ind[1]] - sphere.vertices[fV[i].ind[0]];
		vec3 B = sphere.vertices[fV[i].ind[2]] - sphere.vertices[fV[i].ind[0]];
		vec3 normal = cross(A, B);
		sphere.faces[i] = normalize(normal);
		sphere.faceEdges[i].edge[0] = A;
		sphere.faceEdges[i].edge[1] = B;
	}

	fV[0].ind[0] = 35;
	fV[0].ind[1] = 11;
	fV[0].ind[2] = 13;
	fV[1].ind[0] = 36;
	fV[1].ind[1] = 37;
	fV[1].ind[2] = 13;
	fV[2].ind[0] = 33;
	fV[2].ind[1] = 9;
	fV[2].ind[2] = 11;
	fV[3].ind[0] = 34;
	fV[3].ind[1] = 36;
	fV[3].ind[2] = 12;
	fV[4].ind[0] = 7;
	fV[4].ind[1] = 9;
	fV[4].ind[2] = 33;
	fV[5].ind[0] = 34;
	fV[5].ind[1] = 10;
	fV[5].ind[2] = 8;
	fV[6].ind[0] = 21;
	fV[6].ind[1] = 33;
	fV[6].ind[2] = 35;
	fV[7].ind[0] = 36;
	fV[7].ind[1] = 34;
	fV[7].ind[2] = 22;
	fV[8].ind[0] = 41;
	fV[8].ind[1] = 4;
	fV[8].ind[2] = 46;
	fV[9].ind[0] = 47;
	fV[9].ind[1] = 4;
	fV[9].ind[2] = 41;
	fV[10].ind[0] = 52;
	fV[10].ind[1] = 54;
	fV[10].ind[2] = 60;
	fV[11].ind[0] = 53;
	fV[11].ind[1] = 63;
	fV[11].ind[2] = 61;
	fV[12].ind[0] = 54;
	fV[12].ind[1] = 56;
	fV[12].ind[2] = 58;
	fV[13].ind[0] = 55;
	fV[13].ind[1] = 61;
	fV[13].ind[2] = 59;
	fV[14].ind[0] = 38;
	fV[14].ind[1] = 30;
	fV[14].ind[2] = 29;
	fV[15].ind[0] = 26;
	fV[15].ind[1] = 8;
	fV[15].ind[2] = 15;
	fV[16].ind[0] = 58;
	fV[16].ind[1] = 6;
	fV[16].ind[2] = 62;
	fV[17].ind[0] = 56;
	fV[17].ind[1] = 46;
	fV[17].ind[2] = 58;
	fV[18].ind[0] = 47;
	fV[18].ind[1] = 57;
	fV[18].ind[2] = 59;
	fV[19].ind[0] = 6;
	fV[19].ind[1] = 59;
	fV[19].ind[2] = 63;
	fV[20].ind[0] = 20;
	fV[20].ind[1] = 38;
	fV[20].ind[2] = 18;
	fV[21].ind[0] = 25;
	fV[21].ind[1] = 7;
	fV[21].ind[2] = 31;
	fV[22].ind[0] = 58;
	fV[22].ind[1] = 62;
	fV[22].ind[2] = 60;
	fV[23].ind[0] = 63;
	fV[23].ind[1] = 59;
	fV[23].ind[2] = 61;
	fV[24].ind[0] = 28;
	fV[24].ind[1] = 16;
	fV[24].ind[2] = 27;
	fV[25].ind[0] = 55;
	fV[25].ind[1] = 59;
	fV[25].ind[2] = 57;
	fV[26].ind[0] = 54;
	fV[26].ind[1] = 58;
	fV[26].ind[2] = 60;
	fV[27].ind[0] = 53;
	fV[27].ind[1] = 61;
	fV[27].ind[2] = 55;
	fV[28].ind[0] = 52;
	fV[28].ind[1] = 60;
	fV[28].ind[2] = 62;
	fV[29].ind[0] = 28;
	fV[29].ind[1] = 17;
	fV[29].ind[2] = 16;
	fV[30].ind[0] = 21;
	fV[30].ind[1] = 23;
	fV[30].ind[2] = 24;
	fV[31].ind[0] = 22;
	fV[31].ind[1] = 34;
	fV[31].ind[2] = 32;
	fV[32].ind[0] = 25;
	fV[32].ind[1] = 14;
	fV[32].ind[2] = 7;
	fV[33].ind[0] = 15;
	fV[33].ind[1] = 8;
	fV[33].ind[2] = 53;
	fV[34].ind[0] = 53;
	fV[34].ind[1] = 8;
	fV[34].ind[2] = 63;
	fV[35].ind[0] = 20;
	fV[35].ind[1] = 39;
	fV[35].ind[2] = 38;
	fV[36].ind[0] = 21;
	fV[36].ind[1] = 35;
	fV[36].ind[2] = 23;
	fV[37].ind[0] = 6;
	fV[37].ind[1] = 5;
	fV[37].ind[2] = 59;
	fV[38].ind[0] = 52;
	fV[38].ind[1] = 62;
	fV[38].ind[2] = 7;
	fV[39].ind[0] = 36;
	fV[39].ind[1] = 22;
	fV[39].ind[2] = 24;
	fV[40].ind[0] = 52;
	fV[40].ind[1] = 7;
	fV[40].ind[2] = 14;
	fV[41].ind[0] = 47;
	fV[41].ind[1] = 49;
	fV[41].ind[2] = 57;
	fV[42].ind[0] = 38;
	fV[42].ind[1] = 31;
	fV[42].ind[2] = 21;
	fV[43].ind[0] = 34;
	fV[43].ind[1] = 12;
	fV[43].ind[2] = 10;
	fV[44].ind[0] = 25;
	fV[44].ind[1] = 31;
	fV[44].ind[2] = 2;
	fV[45].ind[0] = 2;
	fV[45].ind[1] = 31;
	fV[45].ind[2] = 38;
	fV[46].ind[0] = 38;
	fV[46].ind[1] = 21;
	fV[46].ind[2] = 19;
	fV[47].ind[0] = 19;
	fV[47].ind[1] = 21;
	fV[47].ind[2] = 18;
	fV[48].ind[0] = 18;
	fV[48].ind[1] = 21;
	fV[48].ind[2] = 22;
	fV[49].ind[0] = 18;
	fV[49].ind[1] = 22;
	fV[49].ind[2] = 20;
	fV[50].ind[0] = 20;
	fV[50].ind[1] = 22;
	fV[50].ind[2] = 39;
	fV[51].ind[0] = 39;
	fV[51].ind[1] = 22;
	fV[51].ind[2] = 32;
	fV[52].ind[0] = 39;
	fV[52].ind[1] = 32;
	fV[52].ind[2] = 3;
	fV[53].ind[0] = 3;
	fV[53].ind[1] = 32;
	fV[53].ind[2] = 26;
	fV[54].ind[0] = 7;
	fV[54].ind[1] = 33;
	fV[54].ind[2] = 31;
	fV[55].ind[0] = 26;
	fV[55].ind[1] = 15;
	fV[55].ind[2] = 28;
	fV[56].ind[0] = 28;
	fV[56].ind[1] = 15;
	fV[56].ind[2] = 17;
	fV[57].ind[0] = 17;
	fV[57].ind[1] = 15;
	fV[57].ind[2] = 51;
	fV[58].ind[0] = 51;
	fV[58].ind[1] = 15;
	fV[58].ind[2] = 57;
	fV[59].ind[0] = 57;
	fV[59].ind[1] = 15;
	fV[59].ind[2] = 55;
	fV[60].ind[0] = 55;
	fV[60].ind[1] = 15;
	fV[60].ind[2] = 53;
	fV[61].ind[0] = 56;
	fV[61].ind[1] = 48;
	fV[61].ind[2] = 46;
	fV[62].ind[0] = 47;
	fV[62].ind[1] = 59;
	fV[62].ind[2] = 4;
	fV[63].ind[0] = 4;
	fV[63].ind[1] = 59;
	fV[63].ind[2] = 5;
	fV[64].ind[0] = 4;
	fV[64].ind[1] = 5;
	fV[64].ind[2] = 58;
	fV[65].ind[0] = 35;
	fV[65].ind[1] = 13;
	fV[65].ind[2] = 37;
	fV[66].ind[0] = 4;
	fV[66].ind[1] = 58;
	fV[66].ind[2] = 46;
	fV[67].ind[0] = 56;
	fV[67].ind[1] = 54;
	fV[67].ind[2] = 14;
	fV[68].ind[0] = 14;
	fV[68].ind[1] = 54;
	fV[68].ind[2] = 52;
	fV[69].ind[0] = 56;
	fV[69].ind[1] = 14;
	fV[69].ind[2] = 50;
	fV[70].ind[0] = 50;
	fV[70].ind[1] = 14;
	fV[70].ind[2] = 16;
	fV[71].ind[0] = 16;
	fV[71].ind[1] = 14;
	fV[71].ind[2] = 27;
	fV[72].ind[0] = 27;
	fV[72].ind[1] = 14;
	fV[72].ind[2] = 25;
	fV[73].ind[0] = 2;
	fV[73].ind[1] = 38;
	fV[73].ind[2] = 0;
	fV[74].ind[0] = 0;
	fV[74].ind[1] = 38;
	fV[74].ind[2] = 29;
	fV[75].ind[0] = 58;
	fV[75].ind[1] = 5;
	fV[75].ind[2] = 6;
	fV[76].ind[0] = 41;
	fV[76].ind[1] = 46;
	fV[76].ind[2] = 48;
	fV[77].ind[0] = 26;
	fV[77].ind[1] = 32;
	fV[77].ind[2] = 8;
	fV[78].ind[0] = 18;
	fV[78].ind[1] = 38;
	fV[78].ind[2] = 19;
	fV[79].ind[0] = 27;
	fV[79].ind[1] = 25;
	fV[79].ind[2] = 0;
	fV[80].ind[0] = 0;
	fV[80].ind[1] = 25;
	fV[80].ind[2] = 2;
	fV[81].ind[0] = 34;
	fV[81].ind[1] = 8;
	fV[81].ind[2] = 32;
	fV[82].ind[0] = 30;
	fV[82].ind[1] = 39;
	fV[82].ind[2] = 1;
	fV[83].ind[0] = 43;
	fV[83].ind[1] = 13;
	fV[83].ind[2] = 11;
	fV[84].ind[0] = 1;
	fV[84].ind[1] = 39;
	fV[84].ind[2] = 3;
	fV[85].ind[0] = 1;
	fV[85].ind[1] = 3;
	fV[85].ind[2] = 26;
	fV[86].ind[0] = 1;
	fV[86].ind[1] = 26;
	fV[86].ind[2] = 28;
	fV[87].ind[0] = 1;
	fV[87].ind[1] = 28;
	fV[87].ind[2] = 30;
	fV[88].ind[0] = 12;
	fV[88].ind[1] = 13;
	fV[88].ind[2] = 43;
	fV[89].ind[0] = 30;
	fV[89].ind[1] = 27;
	fV[89].ind[2] = 29;
	fV[90].ind[0] = 30;
	fV[90].ind[1] = 28;
	fV[90].ind[2] = 27;
	fV[91].ind[0] = 12;
	fV[91].ind[1] = 43;
	fV[91].ind[2] = 10;
	fV[92].ind[0] = 10;
	fV[92].ind[1] = 43;
	fV[92].ind[2] = 45;
	fV[93].ind[0] = 38;
	fV[93].ind[1] = 39;
	fV[93].ind[2] = 30;
	fV[94].ind[0] = 47;
	fV[94].ind[1] = 41;
	fV[94].ind[2] = 49;
	fV[95].ind[0] = 45;
	fV[95].ind[1] = 43;
	fV[95].ind[2] = 42;
	fV[96].ind[0] = 42;
	fV[96].ind[1] = 43;
	fV[96].ind[2] = 44;
	fV[97].ind[0] = 49;
	fV[97].ind[1] = 17;
	fV[97].ind[2] = 51;
	fV[98].ind[0] = 16;
	fV[98].ind[1] = 17;
	fV[98].ind[2] = 40;
	fV[99].ind[0] = 44;
	fV[99].ind[1] = 43;
	fV[99].ind[2] = 9;
	fV[100].ind[0] = 9;
	fV[100].ind[1] = 43;
	fV[100].ind[2] = 11;
	fV[101].ind[0] = 40;
	fV[101].ind[1] = 17;
	fV[101].ind[2] = 41;
	fV[102].ind[0] = 41;
	fV[102].ind[1] = 17;
	fV[102].ind[2] = 49;
	fV[103].ind[0] = 49;
	fV[103].ind[1] = 51;
	fV[103].ind[2] = 57;
	fV[104].ind[0] = 33;
	fV[104].ind[1] = 11;
	fV[104].ind[2] = 35;
	fV[105].ind[0] = 23;
	fV[105].ind[1] = 35;
	fV[105].ind[2] = 37;
	fV[106].ind[0] = 24;
	fV[106].ind[1] = 37;
	fV[106].ind[2] = 36;
	fV[107].ind[0] = 23;
	fV[107].ind[1] = 37;
	fV[107].ind[2] = 24;
	fV[108].ind[0] = 36;
	fV[108].ind[1] = 13;
	fV[108].ind[2] = 12;
	fV[109].ind[0] = 48;
	fV[109].ind[1] = 56;
	fV[109].ind[2] = 50;
	fV[110].ind[0] = 8;
	fV[110].ind[1] = 10;
	fV[110].ind[2] = 63;
	fV[111].ind[0] = 48;
	fV[111].ind[1] = 50;
	fV[111].ind[2] = 16;
	fV[112].ind[0] = 48;
	fV[112].ind[1] = 16;
	fV[112].ind[2] = 41;
	fV[113].ind[0] = 63;
	fV[113].ind[1] = 10;
	fV[113].ind[2] = 45;
	fV[114].ind[0] = 41;
	fV[114].ind[1] = 16;
	fV[114].ind[2] = 40;
	fV[115].ind[0] = 29;
	fV[115].ind[1] = 27;
	fV[115].ind[2] = 0;
	fV[116].ind[0] = 63;
	fV[116].ind[1] = 45;
	fV[116].ind[2] = 65;
	fV[117].ind[0] = 65;
	fV[117].ind[1] = 45;
	fV[117].ind[2] = 42;
	fV[118].ind[0] = 6;
	fV[118].ind[1] = 42;
	fV[118].ind[2] = 62;
	fV[119].ind[0] = 62;
	fV[119].ind[1] = 42;
	fV[119].ind[2] = 64;
	fV[120].ind[0] = 64;
	fV[120].ind[1] = 42;
	fV[120].ind[2] = 44;
	fV[121].ind[0] = 65;
	fV[121].ind[1] = 42;
	fV[121].ind[2] = 63;
	fV[122].ind[0] = 63;
	fV[122].ind[1] = 42;
	fV[122].ind[2] = 6;
	fV[123].ind[0] = 64;
	fV[123].ind[1] = 44;
	fV[123].ind[2] = 62;
	fV[124].ind[0] = 62;
	fV[124].ind[1] = 44;
	fV[124].ind[2] = 9;
	fV[125].ind[0] = 62;
	fV[125].ind[1] = 9;
	fV[125].ind[2] = 7;
	fV[126].ind[0] = 31;
	fV[126].ind[1] = 33;
	fV[126].ind[2] = 21;
	fV[127].ind[0] = 21;
	fV[127].ind[1] = 24;
	fV[127].ind[2] = 22;

	for (int i = 0; i < suzanne.faceCount; ++i)
	{
		suzanne.faceVerts[i].ind[0] = fV[i].ind[0];
		suzanne.faceVerts[i].ind[1] = fV[i].ind[1];
		suzanne.faceVerts[i].ind[2] = fV[i].ind[2];
		vec3 A = suzanne.vertices[fV[i].ind[1]] - suzanne.vertices[fV[i].ind[0]];
		vec3 B = suzanne.vertices[fV[i].ind[2]] - suzanne.vertices[fV[i].ind[0]];
		vec3 normal = cross(A, B);
		suzanne.faces[i] = normalize(normal);
		suzanne.faceEdges[i].edge[0] = A;
		suzanne.faceEdges[i].edge[1] = B;
	}

}

#endif